[{"blogurl": "http://hao1990.blogspot.com\n", "blogroll": [], "title": "Hao's TechBlog"}, {"content": ["At the beginning, I'd like to make clear two terms: \"Nyquist frequency\" and \"Nyquist rate\". \nSome of you may take them as the same thing, and even some textbooks did so. However, although they are quite similar, they are actually different. \nReference: http://en.wikipedia.org/wiki/Nyquist_frequency \n Nyquist Frequency : A property of system. For a given system, sampling rate $f_s$ is fixed. The Nyquist frequency of the system is the allowed highest frequency of a signal that could be sampled without aliasing, which is $f_s / 2$. \n Nyquist Rate : A property of signal. For a given band-limited or band-pass signal, bandwidth B is fixed. The Nyquist rate of the signal is the necessary lowest sampling frequency of a system that could sample the signal without aliasing, which is $2B$. \n \nThen for an (imaging system, image signals), you can interpret the sampling rate is the number of pixels, the highest frequency of the image is the resolution of the image. \nThen the Nyquist says here, for a imaging system, the number of pixels (sampling rate) is fixed, the highest allowed resolution of the pixel is determined by/proportional to the number of pixels. For different kinds of measure of resolution, the proportion factor differs. \nMeanwhile, for an image signal, whose resolution (band-width) is fixed, the required pixels is then determined by/proportional to the resolution. \n \nSo the number of pixels is actually the number of samples a system takes for a given image. \nThen does it mean \"single-pixel\" means the number of samples is 1? The answer is definitely no. \nSo how to interpret the \"single\"-pixel? \n \nIt's a little tricky, but still can be understood. The only thing you need to do is adding a time-axis. \nThe traditional imaging system in your cameras actually taking samples at one time, each sample is a pixel. So the total number of samples is (number of pixels in a unit of time) x (unit of time). Since the (unit of time) is 1 here, we usually ignore it. \nFor the \"signal-pixel\" camera, the number of samples is (number of pixels in a unit of time) x (unit of time). Here (the number of pixels in a unit of time) is 1, whereas the (unit of time) is not 1, which determines the number of samples. \nImage sensors are silicon chips that capture and read light. So in traditional imaging system, we need thousands of image sensors, whereas in single pixel camera, we only use one image sensor to capture and read light. \nThat's the trade-off, number of pixels (image sensors) and unit of time (exposure time). \n \nTherefore, improved interpretation of Nyquist sampling here is to consider the sampling rate being (number of pixels in a unit of time) x (unit of time), i.e., the product of space sampling and time sampling."], "link": "http://hao1990.blogspot.com/feeds/7550307031421649399/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["In this blog, I will discuss from a communication system point of view about the Nyquist sample and CS theory. A communication system usually samples and processes a 1D signal. So here we are talk about 1D signal cases. \n \n \n \nWhat does Nyquist say for 1D signal? \n \n \n \nAs shown in the figure, for a analog signal, we need to first sample it to digital signal, and then process it, and de-sample/reconstruct it into analogy signal again. \nTherefore, the \"process\" part is called digital signal processing (DSP). \nThe Nyquist sampling happens in the \"sampling\" part, before DSP. \nThen what does Nyquist say? \nThat is, given a signal with the highest frequency component being $f_m$. The sufficient condition for return from the digital signal $x[n]$ to $x(t)$ is that the sampling frequency $f_s$ is at least $2f_m$. \nIt should be noticed that this is only a sufficient, not necessary condition. \nIn certain cases, the condition is necessary, e.g., the signal is band-limited. If the whole limited band is occupied by the signal, or we don't know which portion of band the signal occupied, in other words, the only information we've got is the highest frequency of the signal, \n(we call this kind of signal strict-sense band-limited signal), then the only way is to use Nyquist rate to sample the signal. \nHowever, you may argue that, in practice, the signal may not band-limited, then what should we do? \nThe answer is making the signal band-limited before we sample it. This can be done using a LPF. And it is another story that how the band-limited signal approximates the real signal. Here we only focused on the already band-limited signal. \nOn the other hand, you may also ask that, if we have a band-pass signal, (of course, the band-pass signal is a band-limited signal, however, not strict sense band-limited signal), then can we have lower sampling frequency. \nThe answer is yes. To see the method, just think we move the band-pass signal to the base-band, and then it become a strict-sense band-limited signal. Then it is obvious how Nyquist rate works. Actually, we are given more information, i.e., the signal is band-passed from $f_L$ to $f_H$, thus we are able to sample the signal using frequency below $2f_H$. \nIn this case, we can call such sampling process under-sampling. However, it can be viewed as Nyquist sampling via some conversion. \n \n \n It should also be noticed that here the sampling is uniform sampling. If you are interested in this topic, you can review some references in non-uniform sampling. \n Also, when it comes to 2D signal, it is a little tricky to see the Nyquist sampling. It's beyond this blog. \n \n \n \n \nWhat does CS say? \n \n \n \n \nBefore we go into CS, I'd like to a more complete communication system. \nAs you see in the figure, all \"information\" after the dash line are in format of bits stream. And if we ignore all imperfection of the system in between, e.g. we have perfect channel, perfect modulation scheme. Then the process after dash line is distortion free. \nThen we move before the dash line, as we shown in last section, the sampling and de-sampling process can be distortion free. \nThen how about the quantization? It brings distortion, and the precision of the quantizer determines the intensity of the distortion. \nHowever, you can set all these asides to understand CS. \n \nAs shown in the figure, A/D converter actually is responsible for sampling and quantizationg, D/A converter does reverse things. \nAnd source encoder is responsible for compression. \nThen consider, if we can sub-sample the signal, then we may not need to compress the signal. Then the only question is how to reconstruct the signal. CS theory just asserts the signal can be recovered faithfully, if the signal is sparse in certain domain, which is highly incoherent with time domain. For instance, the frequency domain is incoherent with time domain. \nThe CS system can be imaging as following, \n \n \n \n$x[n]$ is corresponding to $r[n]$, however, in the real system, we actually do not have $x[n]$. Instead, we have already compressed $p[n]$, which corresponds to $s[n]$. \nFrom $r[n]$ to $r(t)$ is not a problem. Then how to get $r[n]$ from $s[n]$? That's where CS works. \nAnd as you can see, the A/D (D/A) converter becomes A/I (I/A) converter. \nThe sampling requirement reduced, while the reconstruction is more powerful. This is another kind of asymmetry compared to traditional \"source encoding\". \n \nHow can CS be more powerful? \nSay, what if the signal is sparse in time domain, or in a domain coherent with time domain? Then, according to the CS theory, we should not under-sample in time domain as shown before. We need to under-sample in a domain incoherent with the sparsity domain. \nThen how to design it? The most beautiful part of CS is RIP. The RIP says if you design the \"compression\" part as under-sampling signal in a domain, while the under-sampled part of the domain satisfies RIP, then the signal can be reconstructed faithfully. \nTo my understanding, (and certainly you can have your own interpretation), a matrix satisfies RIP essentially is a subset of domain, i.e., only a few of basis of the domain, while the domain is incoherent with almost every other domain. That's the \"university\" of CS theory. \nAn example is Gaussian matrix, which is almost incoherent with either time domain or frequency domain. \nIt is a little tricky, but if you take into account the role of \"overwhelming probability\", it would be easier to understand the inner connection. \nI didn't go into the mathematical part of these relationships. But if you look at them as a black box, such interpretation does help. \n \nThen the problem is how to first transform the signal into $\\Phi$ domain, to make the following under-sampling possible. \nThis is the story of A/I converter. I won't go into this topic. But intuitively speaking, it takes the help of convolution/integrator. \n \nAnd again, for 2D signals, like imaging system, even high-dimensional signals, the Nyquist sample and CS can be interpreted in another way. And a most vivid example is the \"single-pixel camera\". \nI will discuss the 2D signal sampling, especially the imaging systems, in future."], "link": "http://hao1990.blogspot.com/feeds/2577164820071815613/comments/default", "bloglinks": {}, "links": {"http://4.blogspot.com/": 2, "http://feedads.doubleclick.net/": 2, "http://3.blogspot.com/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["Purpose of this blog entry \n Sparse representation (SR), compressed sensing (CS), single measurement vector (SMV), multiple measurement vector (MMV), I was ever confused about these terms. They seems to be the same, however, the way they using to describe problems differs.In this blog, I aim to make clear the inner relationship among them, and the development of these theories. \n \n \n The Big Picture \n To my understanding, the following figure describes the relationship of them.   \n To see the inherent relationship, I'd rather like to break the CS into two kinds, 1st generation CS (CS1G) and 2nd generation CS (CS2G). The difference will be discussed later. Nevertheless, such notation is not used in current society. So please not be confused when reading papers. \nIn the paper, CS is referred to CS2G. And SMV is referred to CS1G. \nThe notion SMV is first mentioned in [10]. (And in [11], one measurement vectors is used to describe the SMV problem). \nWe will return to the big picture in the end of this blog. \n \n \n SMV: SR and CS1G \n \n The SMV model basically presents such problem: $y = \\Phi x$ \n \n sparse representation : $y$ is viewed as a signal in reality, $\\Phi$ is called an over-complete dictionary, $x$ is the sparse representation \n \n we want to find a sparse representation of the signal using a dictionary, and we want the signal to be as sparse as possible \n $\\Phi \\in R^{M \\times N}$: if M < N, the dictionary is over-complete, if M = N, the dictionary is complete, if M > N, the dictionary is under-complete. The \"complete\" is viewed from the signal $y$. Simply speaking, if the length of the representation is larger than that of the signal, then the signal is \"over-represented\", and thus the dictionary is \"over-complete\". \n 2D DCT, DFT, etc., are sparse representation of the signal using a complete dictionary \n In this blog, we consider sparse representation of the signal using an over-complete dictionary \n \n 1st generation compressed sensing : $x$ is a sparse signal in itself, i.e., there are only a few non-zero entries in $x$, $\\Phi$ is called measurement matrix, $y$ is called measurements \n \n we want to sample a sparse signal using less measurements than its length, in other words, compressing the signal. \n here we only want $\\Phi$ to be over-complete in terms of $y$ \n note that \"$x$ is a sparse signal in itself \" is the identity of CS1G. For CS2G, as we will discussed in next section, $x$ is a sparse signal in domain $\\Psi$, which is a generation of CS1G \n \n \n \n \n Therefore, SMV is actually a model of SR and CS1G, with each describes different applications. \n And we can also view SR as the reconstruction step of CS1G. In other words, in a sampling-reconstruction system, CS1G is the sampling process, and SR is the reconstruction process, by taking the sample as the signal. \n If you have this in mind, you then probably can have a better understanding of following references discussed in this section. \n \n The problem discussed in [1] is that a signal can be reconstructed if certain requirements were met in both cases: \n a signal is sparse in frequency domain, and under-sampled, in other words, missing samples, in time domain, \n or a signal is sparse in time domain, and under-sampled in frequency domain \n \n They are actually CS1G problems, i.e., sampling a sparse signal in itself, and reconstructing the signal by solving the $\\ell_1$ minimization. \n For the first case, $x$ is the frequency components of the signal, $\\tilde{\\Phi}$ is inverse DFT basis, i.e. $IDFT(x) = \\tilde{\\Phi} x$ and $\\Phi = R\\tilde{\\Phi}$ is the measurement matrix, where $R$ is a selection matrix, selecting $M$ rows of $\\tilde{\\Phi}$, $y$ is under-sampled time domain signal. \n For the second case, $x$ is the time domain signal, $\\Phi = R \\tilde{\\Phi}$ is the measurement matrix, where $\\tilde{\\Phi}$ is the DFT basis, $y$ is under-sampled frequency domain signal. \n Thus, by taking the frequency domain components (first case), and time domain components (second case) as the original signal, respectively, the problem discussed is essentially a CS1G problem. \n \n I'd like to also mention the following principle proposed in [1], which, I think, is the basic of following theoretical results. \n Classical Uncertainty Principle : a function $f$ and its Fourier transform $\\hat{f}$ cannot both be highly concentrated. $\\Delta t \\cdot \\Delta w \\geq 1$ \n [1] show a more general principle holds: it is not necessary to suppose that $f$ and $\\hat{f}$are concentrated on intervals; instead, they can be just concentrated on a measurable set. $|T| |W| \\geq 1-\\delta$. And it also applies to sequences. $N_t \\cdot N_w \\geq N$ \n \n CT principle : missing segments of a bandlimited function can be restored stably in the presence of noise if (total measurement of the missing segments) $\\cdot$ (total bandwidth) < 1. \n DT principle : a wideband signal can be reconstructed from narrow-band data, provided the wideband signal to be recovered is sparse or \"impulsive\" \n \n \n Then I have an intuitive understanding on he SMV/SR/CS1G theory: \n a signal cannot be both sparse in two incoherent basis \n under-sample the signal in a non-sparse domain, and recover the signal in sparse domain \n \n \n then from the recovered sparse domain signal, we are able to get the original signal \n \n \n And this is actually the CS2G theory, which do not require $x$ to be sparse in itself. We leave the discussion in next section. \n [2]-[5] are a sub-group of researches, related to both CS1G and CS2G theory. \n [2] actually discussed the SMV problem from SR's point of view. And it proposed more incoherent basis pairs besides (time, frequency). And these incoherent basis pairs are actually CS2G theory. \n [3] improved the constrains related to the replacement of $\\ell_0$ minimization with $\\ell_1$ minimization in [2]. \n [4] proved that the condition in [3] is both sufficient and necessary, whereas [3] only proved the sufficiency. \n [5] should be an extension of [2]. However, I didn't go into details. \n \n [6] is about CS1G, and can be viewed as a direct extension of [1]. The problem discussed in the paper can be phrased as follows: \n a N-length discrete time signal $f$ is sparse in time domain, i.e., consists of a superposition of |T| spikes. \n sub-sample the signal in frequency domain, i.e., only sample |$\\Omega$| frequency components, instead of N. \n If |T| $\\leq C_M \\cdot (\\log{N})^{-1} \\cdot |\\Omega|$, then the reconstruction can be exact with probability at least 1-O($N^{-M^}) \n the reconstruction is via solving $\\ell_1$ minimization problem. \n \n See, it is almost the same with [1] in this sense. \n \n In addition, [6] shows that the min TV problem is actually the problem stated in the paper. \n  \n \n CS2G \n \n As I stated before, \n \n a signal cannot be both sparse in two incoherent basis \n under-sample the signal in a non-sparse domain, and recover the signal in sparse domain \n \n \n The most classical CS theory is expressing this idea. \n $y = \\Phi x = \\Phi \\Psi \\theta$. \n To better understand the essence, we let ($\\tilde{\\Phi}, \\Psi$) be a pair of incoherence basis, $\\Phi = R \\tilde{\\Phi}^T$. \n Then, in $\\tilde{\\Phi}$ domain, $x$ can be expressed as $\\gamma = \\tilde{\\Phi}^T x$, in $\\Psi$ domain, $x$ can be expressed as $\\theta = \\Psi^T x$. \n So $y$ is actually achieved by under-sample the signal in non-sparse domain, i.e., $\\tilde{\\Phi}$ domain. \n In other words, $y = R \\gamma$. \n And the signal is reconstruct in sparse domain, i.e.,, $\\Psi$ domain. \n Then the CS1G is actually taking $\\Psi$ as identity basis. \n \n [7]-[9] are actually the theoretical foundation work on the CS2G theory, together with [2]-[5]. \n I didn't find the paper [7]. However, it is stated in [8] that [7] extended the result in [6], and showed the exact recovery holds for other synthesis/measurement pairs. And [8] describes these results, making reading [7] not so necessary. The results are shown as follows: \n an N-length signal $f$ is sparse in domain $\\Phi$, i.e., $\\theta = \\Phi f$ has only a few nonzero entries. \n sub-sample the signal in domain $\\Psi$, i.e., only sample $|\\Omega|$ coefficients, instead of N \n the reconstruction can be exact, via solving an $\\ell_1$ minimization problem. \n the requirement of the exact reconstruction is about the incoherence between $\\Phi$ and $\\Psi$. \n \n [8] extended the work of [6] and [7], showing that the signal compressible, not necessarily strict sparse, in certain domain can also be optimally reconstructed, i.e., the reconstruction error using K measurements is as good as the best K-term approximation, with overwhelming probability. \n [9] discussed the linear code corrupted by noise problem. However, the RIP condition is proposed in this paper, although it does not show the clear relationship between the decoding and CS. Besides, the Gaussian ensembles are proved to follow RIP with an overwhelming probability. On the other hand, it should be noticed that, if RIP is satisfied, the reconstruction is exact determinedly, whereas in [6] [7] [8], the reconstruction is with overwhelming probability. \n \n Then [13] [14] organized all related theoretical results and formulate the CS problem. \n And [12] gives a tutorial for CS theory, which I preferred to recommend for reading. \n \n \n \n MMV \n \n The only thing left is MMV. As is shown in the big picture, MMV is a direct extension of SMV, in a different way with the evolution from SMV to CS. \n [11] formulate the MMV problem. Similar to SMV, the MMV can be viewed as either a 2D sparse representation problem, or a 2D CS1G problem. \n [10], [15] give theoretical results on MMV, which is derived from those on SMV, i.e., [1]-[6]. \n \n \n \n Discussions \n \n \n In this blog, I didn't discuss the development from noiseless to noisy case, which is also an interesting and important evolution. \n In this blog, I didn't focus on the development from sparse signals to compressible signals. \n In this blog, I only discussed the discrete-time situation. However, CS is actually can be, and should be addressed in analog signals, which is the meaning of \"sensing\". \n Since I'm working on CS theory, my knowledge to SR, MMV is limited. Thus, the goal is to discern the CS with SR, SMV, MMV, instead of introducing SR, MMV, which I believe are far more complicated. \n Return to the big picture, it is interesting to ask, can we extend MMV similar to the extension form SMV to CS? To the best of my knowledge, recent work of Duarte and Baranuik in [16] discussing the high-dimensional CS, where 2D CS is an special case. However, it differs with MMV in the reconstruction method, since it still solving the reconstruction problem in 1D. I would appreciate your help if you can share your opinions and references on this issue. \n At last, I really hope this blog can smooth your perplexity when reading references where you don't know what SR, CS, SMV, MMV refer to. They are on the one hand synonyms and inherently similar, and on the other hand differ slightly from each other in terms of their representations and applications. By the help of this blog, you may have in mind what the reference is discussing when reading, at least, references given in the blog. \n \n \n \n [1] Uncertainty principles and signal recovery \n [2] Uncertainty principles and idea atomic decomposition \n [3] A generalized uncertainty principle and sparse representation \n [4] On sparse representation in pairs of bases \n [5] Optimally sparse representation in general (nonorthogonal) dictionaries via l1 minimization \n [6] Robust uncertainty principles: exact signal reconstruction from highly incomplete frequency information \n [7] The role of sparsity and incoherence for exactly reconstructing a signal from limited measurements \n [8] Near-Optimal signal recovery from random projections: universal encoding strategies ? \n [9] Decoding by linear programming \n [10] Sparse representation for multiple measurement vectors (MMV) in an over-complete dictionary \n [11] Sparse solutions to linear inverse problems with multiple measurement vectors \n [12] An introduction to compressive sampling \n [13] Compressive sampling \n [14] Compressed sensing \n [15] Theoretical results on sparse representations of multiple-measurement vectors \n [16] Kronecker compressed sensing"], "link": "http://hao1990.blogspot.com/feeds/9155124155391016822/comments/default", "bloglinks": {}, "links": {"http://4.blogspot.com/": 1, "http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["Want to apply for a graduate program? \nWant to know who are productive researchers in this area? \nHere are some tips to help you do field study, by the help of IEEE Xplore . \n \n 1. Use advanced search \nInput key words of this area, e.g. compressed sensing. \nI suggest you use \"OR\" to add new filter words. \nClick search. \n 2. See filters on the left side \nSelect \"Publication Year\" with certain range, e.g. 2007 - 2012 \nClick search again. \n \nThen you will see a list of authors on the left side bar. \nThey are ordered by number of publications. \nYou would definitely know those productive researchers in your area. \n \nGo to IEEE Xplore now and check it out~"], "link": "http://hao1990.blogspot.com/feeds/2333186233839436705/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "http://ieeexplore.ieee.org/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["Purpose of this blog entry \n \nDuring my research on CS, one problem is that I have read several papers related on CS, but different paper have different notations and explanations for CS. Besides, they also propose some new stuff in the paper. So it takes me time to get to know the inner connections among these gorgeous references. As a result, I'd like to give a summary, according to my understanding, for the very basics of CS. Hope it will help you in your research. \n \n \n \n What can CS do? \n \nWell, intuitively speaking, CS is a way to sample and compress signals. You can use CS as a method to transmit or store a signal. One most immediate benefit of CS is that it samples and compresses signals at one time, thus reduces the complexity of encoder. \n \n \n \n Why we need CS? \n \nIn following scenarios, we may turn to CS. \n \n1) require simple encoder \n \n2) require less bandwidth \n \n3) sample high frequency component of signals, which cannot be sampled using traditional ways, e.g. MRI. \n \n (Due to the limited knowledge of me, there are lots of scenarios omitted. If you have any suggestions, please be kindly inform me.) \n \nOf course, if you want, you can use CS in whatever scenario that requires sample/store/transmit a signal. And the CS theory provides ways to reconstruct the sampled signals. \n \n \n \n Signals \n \nPlease be advised that, some definitions used in this blog entry may differ from that in some papers. I use my definitions here because according to my understanding, it's better and easier for you to understand the connections between papers. \n \n \n \nLet a signal $\\mathbf{x} \\in \\mathbb{R}^N$ has its projection on an orthonormal basis $\\mathbf{\\Psi} \\in \\mathbb{R}^{N \\times N}$ be $\\mathbf{\\theta} \\in \\mathbb{R}^N$, i.e., $\\mathbf{\\theta} = \\mathbf{\\Psi}^T \\mathbf{x}$. \n \n $S$-sparse signal: $\\mathbf{x}$ is called $S$-sparse in $\\mathbf{\\Psi}$ or has sparsity $S$ in $\\mathbf{\\Psi}$ if $\\mathbf{\\theta}$ has only $S$ nonzero entries. \n $C$-compressible signal: $\\mathbf{x}$ is called $C$-compressible in $\\mathbf{\\Psi}$ or has compressibility $C$ in $\\mathbf{\\Psi}$ if $\\mathbf{\\theta}$ obeys a power law decay with an exponent of $-C-1/2$. \n power law decay: $\\mathbf{\\theta}$ obeys a power law decay if $|\\theta|_{(i)} \\leq R \\cdot i^{-1/p}$, where $R > 0$ is a constant, $0 < p < \\infty$, and $|\\theta|_{(i)}$ is the $i$th largest magnitude entry, i.e., $|\\theta|_{(1)} \\geq \n|\\theta|_{(2)} \\geq \\cdots \\geq\n|\\theta|_{(N)}$. \n \n \nThen $C = 1/p - 1/2$ for compressible signals. \nMostly, $C$-compressible signals consider only the case $0 < p < 1$, i.e., $C > 1/2$. \nIt should be noticed that $\\mathbf{\\theta}$ is also an $S$-sparse or $C$-compressible in $\\mathbf{\\Psi} = \\mathbf{I}$, where $\\mathbf{I}$ is an identity basis. Thus, to be precise, we need to consider/indicate in which basis the signal has what sparsity or compressibility . For example, a signal may have sparsity 10 in Fourier basis, but may have sparsity 20 in DCT basis. Some papers would not indicate the sparsity \n \n \n \n Best $J$-term approximation \nTo approximate a signal $\\mathbf{\\theta}$, we can use the largest $J$ terms (in magnitude) in it, i.e., $\\mathbf{\\theta}_J$. Therefore, \n \n \n \n if $\\mathbf{\\theta}$ is $S$-sparse in $\\mathbf{I}$, then the best $J$-term approximation would have an approximation error equal to 0 if $J \\geq S$, i.e., $\\mathbf{\\theta}_J = \\mathbf{\\theta}$. \n if $\\mathbf{\\theta}$ is $C$-compressible in $\\mathbf{I}$, then the best $S$-term approximation would have an approximation error equal $||\\mathbf{\\theta} - \\mathbf{\\theta}_J||_1 \\leq G_C \\cdot R \\cdot J^{-C+1/2}$ and $||\\mathbf{\\theta} - \\mathbf{\\theta}_J||_2 \\leq G_C \\cdot R \\cdot J^{-C}$, where $G_C$ is a constant only depend on $C$. \n \nMeanwhile, we should indicate which basis does the best $J$-term approximation consider, e.g., $\\mathbf{\\theta}_J$ is the best $J$-term approximation in $\\mathbf{I}$. \n \nThen, we also say a best $J$-term approximation of $\\mathbf{x}$ in $\\mathbf{\\Psi}$ is $\\mathbf{x}_J$, i.e., $\\mathbf{\\theta}_J = \\mathbf{\\Psi}^T \\mathbf{x}_J$ is the best $J$-term approximation of $\\mathbf{\\theta = \\Psi}^T \\mathbf{x}$ in $\\mathbf{I}$. Similarly, we need to consider two attributes when saying a best $J$-term approximation: 1)$J$ and 2)$\\mathbf{\\Psi}$. \n \n \nAnother thing should be noticed is that since $\\mathbf{\\Psi}$ is an orthonormal basis, $||\\mathbf{x} - \\mathbf{x}_J||_2 = ||\\mathbf{\\theta} - \\mathbf{\\theta}_J||_2 \\leq G_C \\cdot R \\cdot J^{-C}$, i.e., the MSE has a power law decay. With $J$ increasing, the MSE would decrease. \n \n How CS works? \nGenerally speaking, CS samples a signal $\\mathbf{x}$ using $\\mathbf{y = \\Phi x = \\Phi \\Psi \\theta = A \\theta}$. \n \n \n \n $\\mathbf{A} \\in \\mathbb{R}^{K \\times N}$: sensing matrix, $\\mathbf{A = \\Phi \\Psi}$. \n $\\mathbf{\\Phi} \\in \\mathbb{R}^{K \\times N}$: measurement matrix \n \n (I was ever confused the sensing matrix with measurement matrix...) \n \nIn this way, the signal is compressed in $\\mathbf{y} \\in \\mathbb{R}^K$. \n \nReconstructing the signal from $\\mathbf{y}$ can be achieved by solving a convex optimization problem, i.e., $\\min ||\\mathbf{\\theta}||_1$ s.t. $\\mathbf{y = \\Phi \\theta}$ by knowing $\\mathbf{y}$ and $\\mathbf{\\Phi}$, and then using $\\mathbf{x = \\Psi\\theta}$ to get $\\mathbf{x}$ back. In other words, you can solve $\\min ||\\mathbf{x}||_1$ s.t. $\\mathbf{y = A x}$ by knowing $\\mathbf{y}$ and $\\mathbf{A}$. They are equivalent. \n \nThe foundation of CS theory is to prove that in this sample-reconstruct process, the information in $\\mathbf{x}$ can be preserved, and thus $\\mathbf{x}$ can be well reconstructed. \n \nIn the following demonstration, I will not show you how the theory evolves, rather than how to prove the result. If you like, you can refer to papers I cite to see the details. And a tip for your reading is that please notice what the choice of $\\mathbf{A, \\Phi, \\Psi}$ in CS. \n \nAt the very beginning, the idea of CS is presented in [1]. In that paper, it proved that for an $S$-sparse signal in Fourier basis, using CS, the reconstruction would be exact with an overwhelming probability at least $1 - O(N^{-\\alpha})$ provided that $K \\geq G_\\alpha S \\log{N}$, where $G_\\alpha > 0$ is a constant only depend on the accuracy parameter $\\alpha$. That is to say, for a given desired probability of success, a sufficient condition for exactly reconstruction is $K \\geq G_\\alpha S \\log{N}$. It should be noticed that in some paper, it also gives a necessary condition with a similar result, please do not mix them up. \n \nThe choice of $\\mathbf{\\Psi}$ is Fourier basis. The choice of $\\mathbf{A}$ is a random selecting matrix, i.e., randomly selecting $K$ elements from $\\mathbf{\\theta}$, e.g. $\\mathbf{A}$ = [0 1 0 0 0; 0 0 1 0 0] which extracts the second and third elements of $\\mathbf{\\theta}$. Thus $\\mathbf{\\Phi} = \\mathbf{A \\Psi}^T$ can be generated accordingly. \n \nIt can be seen that if a signal is $S$-sparse in another basis $\\mathbf{\\Psi}$, CS can still reconstruct it using this way to generate $\\mathbf{A}$ and $\\mathbf{\\Phi}$ by knowing $\\mathbf{\\Psi}$. \n \nFurthermore, in [4],they extended these results and showed that exact reconstruction hold for other $(\\mathbf{\\Phi, \\Psi})$ pairs. \n \nThen in [2], it began to consider a $C$-compressible signal. It showed that using CS, the reconstruction is optimal with an overwhelming probability at least $1 - O(N^{-\\rho / \\alpha})$. By optimal, it means that it is generally impossible to obtain a higher accuracy from any set of $K$ measurements whatsover. The reconstruction error obeys $||\\hat{\\mathbf{x}} - \\mathbf{x}||_2 = ||\\hat{\\mathbf{\\theta}} - \\mathbf{\\theta}||_2 \\leq G_{C, \\alpha} \\cdot R \\cdot (K / \\log{N})^{-C}$, where $\\hat{\\mathbf{x}}$ and $\\hat{\\mathbf{\\theta}}$ is the reconstructed signals, $G_{C, \\alpha}$ is a constant depending on $C$ and $\\alpha$. This indeed says that if one make $K = O(J\\log{N})$ measurements using CS, one still obtains a reconstruction error equally as good as using best $J$-term approximation. In other words, the following two cases have similar reconstruction error: 1) knowing everything about $\\mathbf{\\theta}$ and selecting $J$ largest entries of it, 2) reconstructing $\\mathbf{\\theta}$ using $K = O(J\\log{N})$ measurements without any prior knowledge on it. \n \nIn [2], the choice of $\\mathbf{\\Psi}$ is can be any orthonormal basis and it provided three ways to generate $\\mathbf{A}$: 1) Gaussian ensembles; 2) Binary ensembles; 3) Fourier ensembles. \n \nBefore goes go, I'd like to introduce the so-called restricted isometry property (RIP). For each integer $k = 1, 2, \\dots$, define the $k$-restricted isometry constant $\\delta_k$ of a matrix $\\mathbf{A}$ as the smallest number such that $(1-\\delta_k)||\\mathbf{\\theta}||_2^2 \\leq ||\\mathbf{A \\theta}||_2^2 \\leq (1 + \\delta_k) ||\\mathbf{\\theta}||_2^2$ holds for all $S$-sparse signal vector $\\mathbf{\\theta}$ in $I$ with $S \\leq k$. Therefore, $\\mathbf{A}$ should have more than one restricted isometry constant since we can choose any $k$. Usually, we say a matrix $\\mathbf{A}$ obeys RIP of order $S$ if $\\delta_S$ is not too close to 1. \n \nThen a stronger result is introduced in [5] and [6] (and stated in [3]), which says that, if the $k$-restricted isometry constant $\\delta_k$ of $\\mathbf{A}$ satisfies certain constraints (with different $k$), e.g. $\\delta_{2S} \\leq \\sqrt{2} - 1$ (several other constraints are stated in [5] and [6]), then the reconstructed signal $\\hat{\\mathbf{\\theta}}$ obeys $||\\hat{\\mathbf{\\theta}} - \\mathbf{\\theta}||_2 \\leq G_0 \\cdot ||\\mathbf{\\theta} - \\mathbf{\\theta}_S||_1 / \\sqrt{S}$ and $||\\hat{\\mathbf{\\theta}} - \\mathbf{\\theta}||_1 \\leq G_0 \\cdot ||\\mathbf{\\theta} - \\mathbf{\\theta}_S||_1$ for some constant $G_0$, where $\\mathbf{\\theta}_S$ is the best $S$-term approximation of $\\mathbf{\\theta}$ in $\\mathbf{I}$. This is deterministic, without any probability of success. \n \nTo go a step further, you will see that the result is in consistent with previous results. If you replace $||\\mathbf{\\theta} - \\mathbf{\\theta}_S||_1$ using the result in \"Best $J$-term approximation\", you will see the magic. \n \nThen the question comes, how to generate a sensing matrix $\\mathbf{A}$ satisfies the requirement of RIP? \n \n How to generate sensing matrix $\\mathbf{A}$? \nThere are lots of ways to generate a sensing matrix $\\mathbf{A}$. I'd rather let you refer section \"RANDOM SENSING\" in [3] for a review. Here I just want to talk about two most common ways: 1) from $\\mathbf{A}$ by sampling $N$ column vectors uniformly at random on the unit sphere of $\\mathbb{R}^K$; 2) from $\\mathbf{A}$ by sampling i.i.d. entries from the normal distribution with mean 0 and variance 1/K. With an overwhelming probability, these matrices obey the RIP constraints (e.g. $\\delta_{2S} \\leq \\sqrt{2} - 1$) provided that $K \\geq G \\cdot S \\log{(N/S)}$, where $G$ is some constant depending on each instance. \n \nAnother interesting property is that the RIP constraints can also hold for sensing matrix $\\mathbf{A = \\Phi \\Psi}$ where $\\mathbf{\\Psi}$ is arbitrary orthonormal basis and $\\mathbf{\\Phi}$ is an $K \\times N$ measurement matrix drawn randomly from a suitable distribution, e.g., with an overwhelming probability, provided that $K \\geq G \\cdot S \\log{(N/S)}$, $\\mathbf{A}$ obeys the RIP constraints. This makes CS sampling easier, because we only need to generate a measurement matrix $\\mathbf{\\Phi}$ without knowing $\\mathbf{\\Psi}$ at the encoder side. \n  \n A reading tree/graph for basic understanding of CS theory \n \nIf you read papers from the top layer to bottom layer, you should have deeper and deeper understanding about CS theory. \n \n \n \n \n \n \n \n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n   \n  \n References \n \n[1] Robust Uncertainty Principles: Exact Signal Reconstruction From Highly Incomplete Frequency Information \n \n[2] Near-Optimal Signal Recovery From Random Projections: Universal Encoding Strategies? \n \n[3] An Introduction To Compressive Sensing \n \n[4] The Role of Sparsity and Incoherence for Exactly Reconstructing a Signal from Limited Measurement \n[5] Stable signal recovery from incomplete and inaccurate measurements \n[6] Compressed sensing and best k-term approximation"], "link": "http://hao1990.blogspot.com/feeds/3897508918364466368/comments/default", "bloglinks": {}, "links": {"http://4.blogspot.com/": 1, "http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["Here I want to show tasks that helps you get to know how to write a paper for IEEE transactions. \n \n1. Visit \"IEEE Author Digital Tool Box\" \n http://www.ieee.org/publications_standards/publications/authors/authors_journals.html \nand Read \"Instructions\" for different Templates. \nYou may need only read the instruction for the template you will use. Here we focus on the \"Instruction Only\" in the \"Template fors Transactions\" part. \n http://www.ieee.org/documents/TRANS-JOUR.pdf \n* In this step, you will have a basic knowledge on the rules of writing a paper in IEEE society, especially for transactions and journal. \n2.1 For MS Word users, \n2.1.1 please download \"Template and Instructions on How to Create Your Paper\". \n http://www.ieee.org/documents/TRANS-JOUR.doc \n2.1.2 Please follows the instruction in the document to create your paper. \n2.2 For Latex users, \n2.2.1 You need to download \"Transaction Style File\", either \"Unix LaTeX2e Transactions Style File\", h ttp://www.ieee.org/documents/IEEEtran.tar.gz \nor \"WIN OR MAC LaTeX2e Transactions Style File\" . \n http://www.ieee.org/documents/IEEEtran.zip \n* The Bibiliography file is included in the file (under the directory of \"bibtex\"). \n2.2.2 Read the \"IEEEtran_HOWTO.pdf\" to know how to use the style file. \n2.2.3 Read the \"IEEEtran_bst_HOWTO.pdf\" under \"bibtex\" directory to know how to manage bibliography. \n \nAfter finish these simple tasks, you should have a basic knowledge on the technical issues for your paper."], "link": "http://www.ieee.org/documents/IEEEtran.tar.gz", "bloglinks": {}, "links": {"http://www.ieee.org/": 5, "http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u4ee5\u524d\u535a\u4e3b\u4e00\u76f4\u7528mGSD\uff08 http://mgsd.tiddlyspot.com/#mGSD \uff09\u6765\u4f5cGTD\u7ba1\u7406 mGSD\u662f\u4e00\u4e2a\u57fa\u4e8etiddlywiki\u7684\u5e94\u7528 \u57fa\u672cGTD\u7684\u529f\u80fd\u90fd\u5b9e\u73b0\u4e86 \u5e76\u4e14\u6709\u7740tiddlywiki\u7684\u7279\u70b9\uff1a\u5355HTML\u6587\u4ef6 \n\u6240\u4ee5\u65b9\u4fbf\u8de8\u5e73\u53f0 \u4e5f\u65b9\u4fbf\u5230\u5904\u643a\u5e26 \n \n\u5bf9\u4e8e\u6709\u591a\u53f0\u5e38\u7528\u7535\u8111\u7684 \u6211\u4e00\u822c\u4f7f\u7528GitHub\u6216\u8005Windows Live Mesh\u8fdb\u884c\u540c\u6b65\u7ba1\u7406 \n \n\u4f46\u662f\u5b83\u6709\u4e00\u4e2a\u6bd4\u8f83\u81f4\u547d\u7684\u5f31\u70b9 \u4e5f\u662ftiddlywiki\u4e00\u76f4\u5b58\u5728\u7684\u95ee\u9898 \u5bf9\u4e8e\u79fb\u52a8\u8bbe\u5907\u7684\u652f\u6301 \u6ca1\u6709\u518dipad android phone\u4e0a\u7684app\u652f\u6301 \n \n\u6240\u4ee5\u535a\u4e3b\u6700\u8fd1\u53d1\u73b0\u4e00\u4e2a\u514d\u8d39\u7684app\uff1a doit.im ( http://doit.im/ ) \n\u5b83\u53ef\u4ee5\u5728android\u548capple\u7684\u79fb\u52a8\u8bbe\u5907\u4e0a\u4f7f\u7528 \u4e5f\u53ef\u4ee5\u901a\u8fc7web\u4f7f\u7528 \n\u5e76\u4e14\u5728GTD\u7684\u529f\u80fd\u65b9\u9762 \u9664\u4e86\u6b63\u5e38\u7684\u529f\u80fd\u5916 \u8fd8\u6709 \n1. \u6536\u96c6\u7bb1\u529f\u80fd \u7528\u4e8e\u5b58\u50a8\u6682\u65f6\u65e0\u6cd5\u5f52\u7c7b\u7684\u9879\u76ee \n2. \u95f9\u949f\u63d0\u9192\u529f\u80fd \u5e76\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u63d0\u9192\u65f6\u95f4 \n3. \u4f18\u5148\u7ea7\u529f\u80fd \n4. \u8fc7\u6ee4\u5668 \n5. \u4e0egoogle calendar\u540c\u6b65 \u8fd9\u4e2a\u529f\u80fd\u5bf9\u4e8e\u535a\u4e3b\u8fd9\u79cdgoogle\u7528\u6237\u592a\u6709\u7528\u4e86 \n \n\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u5c0f\u7f3a\u70b9\u7684 \u6bd4\u5982\u6ca1\u6709review\u673a\u5236\u7b49 \u4f46\u662f\u6839\u636e\u5b98\u65b9\u7684\u8bf4\u6cd5 9\u6708\u4efd\u5de6\u53f3\u5e94\u8be5\u5c31\u4f1a\u66f4\u65b0\u4e86 \n \n\u53e6\u5916\uff0c\u5bf9\u4e8ewindows\u684c\u9762\u7248\uff0c\u5b98\u65b9\u8bf4\u6cd5\u662f\u8fd8\u5728\u5f00\u53d1\uff0c\u4ee5\u524d\u7684\u7248\u672c\u4ecd\u80fd\u5728 http://support.doit.im/entries/21392588-doit-im-for-windows0-9-1 \u4e0b\u8f7d\u5230\uff0c\u4e5f\u80fd\u4f7f\u7528\uff0c\u636e\u8bf4\u6709BUG\u3002 \n \n\u518d\u6700\u540e\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u662f\u56fd\u4ea7\u7684\u8f6f\u4ef6\uff0c\u800c\u4e14\u4e2a\u4eba\u89c9\u5f97\u505a\u7684\u6bd4\u8f83\u597d\u7684\u3002\u542c\u8bf4\u6700\u8fd1\u4e5f\u83b7\u5f97\u4e86\u6295\u8d44\uff0c\u6240\u4ee5\u535a\u4e3b\u8868\u793a\u5f3a\u70c8\u652f\u6301\u3002\u6700\u8fd1\u63a8\u51faPro\u6536\u8d39\uff0c\u5982\u679c\u505a\u5f97\u597d\u7684\u8bdd\uff0c\u4e5f\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u7684\u3002"], "link": "http://hao1990.blogspot.com/feeds/3124254494068224029/comments/default", "bloglinks": {}, "links": {"http://doit.im/": 1, "http://feedads.doubleclick.net/": 2, "http://mgsd.tiddlyspot.com/": 1, "http://support.doit.im/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u6628\u5929\u7a81\u7136\u53d1\u73b0windows 7\u6ca1\u6cd5\u4f11\u7720\u4e86 \n\u75c7\u72b6\u662f\uff1a \n\u70b9\u4f11\u7720\u540e\u5c4f\u5e55\u4f1a\u9ed1\u4e00\u4e0b \u7136\u540e\u5c31\u8fdb\u5165\u5230\u4e86Login\u7684\u753b\u9762\u4e86-\u3002- \n \n\u5728\u7f51\u4e0a\u641c\u4e86\u534a\u5929\uff1a\u201cwindows 7\u65e0\u6cd5\u4f11\u7720\u201d\u4e4b\u7c7b\u7684 \n\u57fa\u672c\u4e0a\u90fd\u5728\u8bf4\u4ec0\u4e48\uff1a\u66f4\u65b0\u9a71\u52a8\u54c7\uff0c\u8bbe\u7f6epower configuration\u4e4b\u7c7b\u7684\u3002\u3002 \n\u90fd\u6ca1\u7528\u3002\u3002\u3002 \n \n\u6b63\u5728\u90c1\u95f7 \u4e8e\u662f\u7528\u82f1\u6587\u641c\u4e86\u4e00\u4e0b windows 7 cannot hibernate \n\uff08\u4f11\u7720\u662fHibernate \u7761\u7720\u662fsleep \u54c8\u54c8~\uff09 \n\u7ec8\u4e8e\u773c\u775b\u4e00\u4eae\u770b\u5230\u4e00\u4e2a[Solved] GRUB + Windows 7 = Can't put windows to sleep/hibernate \n \u7279\u522b\u662f\u8fd9\u4e2asolved\u54c7 \u771f\u662f\u6551\u547d\u7a3b\u8349\u54c7 \n\u94fe\u63a5\u5982\u4e0b\uff1a http://ubuntuforums.org/showthread.php?t=1341694 \n \n \n\u7136\u540e\u57fa\u672c\u6309\u7167\u91cc\u9762\u7684\u6b65\u9aa4 \u5c31OK\u4e86 \n \n\u5982\u679c\u4f60\u7684\u7535\u8111\u4e5f\u88c5\u4e86ubuntu\u4e4b\u7c7b\u7684 \u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u6ca1\u8dd1\u513f\u4e86 \n\u5982\u679c\u4f60\u53ea\u6709windows... \u90a3\u5c31\u53e6\u5bfb\u4ed6\u6cd5\u5427-\u3002- \n \n\u8fd9\u91cc\u6211\u628a\u82f1\u6587\u5927\u6982\u7ffb\u8bd1\u4e00\u4e0b~ \n \n\u75c7\u72b6\uff1a \n\u5728\u88c5\u4e86Windows 7\u4e4b\u540e\u88c5Ubuntu\u53cc\u7cfb\u7edf\u7684\u673a\u5b50\uff08\u8fd9\u4e2a\u53cc\u7cfb\u7edf\u7684\u987a\u5e8f\u4e5f\u662f\u6709\u8bb2\u7a76\u4e86\u3002\u3002\u4e3b\u8981\u662f\u770b\u4f60\u662f\u4e0d\u662f\u7528GRUB\u5f15\u5bfc\u7cfb\u7edf\uff09\uff0c\u8fd9\u4e2a\u4f60\u5c31\u628aGRUB\u88c5\u5728\u4e86MBR\u4e0a\uff0c\u8fd9\u4e2a\u5c31\u4f1a\u5bfc\u81f4Windows\u6ca1\u6cd5\u8fdb\u5165sleep or hibernate\u6a21\u5f0f\uff08\u8fd9\u4e2a\u5c4f\u5e55\u4f1a\u9ed1\u4e00\u4e0b\uff0c\u7136\u540e\u76f4\u63a5\u56de\u6765\uff09\u3002\u7528WIN7\u7684DVD\u6062\u590d\u8fd9\u4e2aMBR\u5230\u539f\u6765\u7684\u72b6\u6001\u5462\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u4f46\u662f\u4f1a\u8ba9\u4f60\u7684GRUB\u53c8\u6ca1\u6cd5\u5de5\u4f5c\u4e86... \n \n\u5b9e\u9645\u95ee\u9898\uff1a \n\u8981\u8ba9sleep/hibernate\u5de5\u4f5c\uff0c\u7b2c\u4e00\u4e2awindows\u7684\u5206\u533a\u5fc5\u987b\u662f\u6807\u8bb0\u4e3aboot\uff0c\u5373\u4f7f\u91cc\u9762\u88c5\u4e86GRUB\u3002 \n \n\u89e3\u51b3\u65b9\u6848\uff1a \n\u5728Ubuntu\u4e0b\uff0c \u4f7f\u7528gparted(\u5982\u679c\u6ca1\u88c5\u7684\u8bdd sudo apt-get install gparted\u3002\u4f7f\u7528\u5c31\u662fsudo gparted)\u3002\u5728\u4f60\u7684boot driver\uff08\u901a\u5e38\u662f/dev/sda)\uff0c\u786e\u4fdd\u7b2c\u4e00\u4e2awindows\u5206\u533a\u662f\u6807\u4e3aboot\u7684\u3002\u7136\u540e\u91cd\u542f\u5c31OK\u4e86 \n \nP.S. \u8fd9\u4e2a\u5e16\u5b50\u7684\u56de\u590d\u4e5f\u503c\u5f97\u4e00\u770b~ \n \n\u4e00\u822c\u7528Thinkpad\u7684\u540c\u5b66\u5e38\u5e38\u4f1a\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3aThinkpad\u6709\u4e2a\u9ed8\u8ba4\u7684\u5206\u533aSYSTEM_DRV\u5728C\u76d8\u4e4b\u524d\u3002\u4e00\u822c\u5b83\u662f\u4f5c\u4e3aboot\u5206\u533a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u628aWindows\u7cfb\u7edf\u5206\u533a\u4f5c\u4e3aboot\u5c31\u597d\u4e86\u3002 \n \n\u8fd9\u4e2a\u6545\u4e8b\u544a\u8bc9\u6211\u4eec\uff0c\u638c\u63e1\u82f1\u6587\u641c\u7d22\u80fd\u529b\u5f88\u91cd\u8981..."], "link": "http://hao1990.blogspot.com/feeds/1193878204588927173/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "http://ubuntuforums.org/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["(\u90e8\u5206\u8f6c\u81ea\u767e\u5ea6\u77e5\u9053) \n \n \u3010\u95ee\u9898\u3011 \u539f\u6765html\u4e2donclick\u51fa\u53d1js\u65b9\u6cd5\u53ef\u4ee5\u4f20\u9012\u53c2\u6570 <a href=\"#\" onClick=\"showFile('view');\">aaaaa</a> \n <script>function showFile(fun){}</script> \n \u4f46\u662f \u73b0\u5728\u7528jquery\u7684click\u4e8b\u4ef6\u600e\u4e48\u4f20\u9012\u8fd9\u4e2a\u53c2\u6570\uff1f \n <a href=\"#\" id=\"fun\">aaaaa</a> $(\"#fun\").click(function () { }); \n  \n \u3010 \u89e3\u7b54\u3011 \n 1. jQuery\u7684click\u4e8b\u4ef6\u4e0d\u80fd\u76f4\u63a5\u4f20\u9012\u53c2\u6570\uff0c \n \u5982\u679c\u4f7f\u7528 $('#fun').click(choose(\"val\")); \n \n\u4f1a\u5bfc\u81f4\u5728\u8fd0\u884c\u8fd9\u4e2a\u8bed\u53e5\u65f6\u76f4\u63a5\u8fd0\u884cchoose\u51fd\u6570\u3002 \n \n \u5e94\u8be5\u4f7f\u7528 $('#fun') .click(choose); function choose() { //... }  \n 2. \u53ef\u4ee5\u628a \n $('#fun').click(function () { \n}); \u770b\u4f5c\u4e00\u4e2afunction\u58f0\u660e, \u5c31\u76f8\u5f53\u4e8eonclick\u7684\u4e8b\u4ef6\u58f0\u660e; \n $('#fun').click(function () {  function()(\u8c03\u7528\u7684\u65b9\u6cd5) });  \n 3. \u53ef\u4ee5\u4f7f\u7528\u6807\u7b7e\u5185\u7684attr\u6765\u83b7\u5f97\u5173\u4e8e\u6b64\u6807\u7b7e\u7684\u53c2\u6570 <a id=\"fun\" testvalue='abc' href=\"#\" onClick=\"showFile('view');\">aaaaa</a> $('#fun').click(function () { \n alert($(this).attr('testvalue')); \n alert($(this).text()); \n alert($(this).attr('href')); //...... });"], "link": "http://hao1990.blogspot.com/feeds/8467812943253994208/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u4e00\u822c\u6765\u8bf4\uff0c\u7528js\u83b7\u53d6input\u6807\u7b7e\u5185\u7684\u503c\u4f1a\u7528 \n <input id=\"p_folder\"></input> \n var p = document.getElementById(\"p_folder\"); \n var pV = p.value; \n \n \u4f46\u662fjQuery\u4e2d\uff0c\u5982\u679c\u5199\u6210 \n var p = $('p_folder'); \n var pV = p.value\uff1b \n \u5c06\u65e0\u6cd5\u83b7\u53d6\u5230\u6807\u7b7e\u5185\u7684\u503c, \n \n \u8fd9\u662f\u56e0\u4e3a \n $(\"\")\u662f\u4e00\u4e2ajQuery\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4e00\u4e2aDOM element \n value\u662fDOM element\u7684\u5c5e\u6027\uff0c\u5bf9\u5e94jQuery\u7684val \n val():\u83b7\u5f97\u7b2c\u4e00\u4e2a\u5339\u914d\u5143\u7d20\u7684\u5f53\u524d\u503c \n val(\"val\"):\u8bbe\u7f6e\u6bcf\u4e00\u4e2a\u5339\u914d\u5143\u7d20\u7684\u503c\u4e3aval \n \n \u6240\u4ee5\u4e0a\u9762\u7684code\u5e94\u8be5\u5199\u6210 \n var p = $('p_folder'); \n var pV = p.val();"], "link": "http://hao1990.blogspot.com/feeds/706097372423786493/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["[1] proposed to use cs on stream video by sample several frame together or independently.... But it didn't consider the interframe redundancy. \n \n[2] was focus on increasing the resolution of digital video, thus little work was done for video coding/compression. \n \n[3] [4] proposed compressed video sensing in 2008. \n[3] used a hybrid way to compress video. The main contribution I think was only the scheme it proposed: transmit both conventionally encoding(low resolution) and cs encoding(high resolution) video stream, recon. on demand (if coarse-scale -> conventionally decoding, if fine-scale, cs decoding). \nCompared to [3], I think [4] is much important for CVS. The way it employed is classifying the blocks of a frame to dense and sparse via a cs testing. Dense blocks use conventional encoding, while sparse blocks use cs. The cs testing for a block of frame is another contribution should be noticed. \n \nIn 2009, most work were focus on distributed CVS based on the notion of Distributed Video Coding(DVC). [5] use reconstructed key frame to find sparse basis for cs frame, and it proposed L1, SKIP, SINGLE modes for cs frames. The codec is quite similar with pixel-domain dvc. [6] also use reconstructed key frame to generate side information. But its side information is not the sparse basis, but a prediction. Furthermore, [6] use both frame-based and block-based encoding for cs frames. It is quite novel. But I think although it improves the performance, but a little redundant. Different with [5][6], [7] use cs for both key frame and non-key frame. And it proposed the modified GPSR for DCVS. Furthermore, there are relatively complete review of techniques like cs, dvc, dcs, etc., which I think is quite useful for beginners in this area. \n \n[8] proposed a very interesting multiscale framework. It employs LIMAT[11] framework to exploit motion information and remove temporal redundancies. And it use iterative multiscale framework: reconstructing successively finer resolution approximation to each frame using motion vectors estimated at coarser scales, and alternatively using these approximation to estimate the motion. The multiscale framework essentially exploit the feature of wavelet transformation (coarse scale and fine scale). \n \n[10] is published in 2011. It designs the cross-layer system for video transmission using compressed sensing. \nThe cross-layer system jointly controls video encoding rate, transmission rate, channel coding rate. It is useful for researchers who focus on network design of a compressive sensing application. \n \n[9] is not about CVS, but I think it's very important to know current video compression techniques. It introduced the video compression techniques like H.26x, MPEG, etc. It's a very good introduction and review work. \n \nAnother thing should be mentioned is that, Distributed Compressed Video Coding in [5] [6] both used the notion: the sparsest representation of a frame is a combination of neighbor blocks of a block. \n \n[1] Compressive imaging for video representation and coding \n[2] Compressive coded aperture video reconstruction \n[3] Compressed video sensing \n[4] Compressive Video Sampling \n[5] Distributed video coding using compressive sampling \n[6] Distributed compressed video sensing \n[7] Distributed compressive video sensing \n[8] A multiscale framework for compressive sensing of video \n[9] Video Compression Techniques: An Overview \n[10] Compressed-Sensing-Enabled Video Streaming for Wireless Multimedia Sensor Networks \n[11] Lifting-based invertible motion adaptive transform framework for highly scalable video compression"], "link": "http://hao1990.blogspot.com/feeds/6925056280047351224/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["* This article is only a review for my personal use. There may have some mistakes. Please do not trust in this article. \n* If you noticed any mistakes in this article, please notify me. Thanks a lot. \n \nIn the following description, M is the number of measurements needed, N is the length of signal, K is sparsity, \u03a6 is measurement matrix, \u03a8 is sparse basis. C is a constant. \n$Y = AX = \\Phi\\Psi X$ \n \nThe requirement for $M$ \n[1] Sparsity and Incoherence in compressive sampling \n$M \\geq C \\cdot \\mu^2(\\Phi, \\Psi) \\cdot K {\\text log}N$ \n \n[2] An introduction to Compressive Sampling \nForm A obeying RIP i)-iv) \n$M = O(K {\\text log}(N/K))$ \n$M \\geq C \\cdot K {\\text log}(N/K)$ \ni)-iii) see \n[3] A simple proof of the restricted isometry property for random matrices \niv) see \n[4] Uniform uncertainty principles for Bernoulli and sub-gaussian ensembles \n \nForm A by first finding paris of incoherent orthobases $\\Phi, \\Psi$, and then exracting $M$ coordinates uniformly at random using R: $A = R\\Phi\\Psi$. \n$M \\geq C \\cdot ({\\text log}N)^4$ \n$M \\geq C \\cdot ({\\text log}N)^5$ for a lower probability of failure \nsee [6] and [7] On sparse reconstruction from Fourier and Gaussian measurements \n \n[6] Near-optimal signal recovery from random projections and universal encoding strategies \n[8] Compressed Sensing, D.L.Donoho \n[9] Robust uncertainty principles: exact signal reconstruction from highly incomplete frequency information \n [10] Neighborliness of randomly projected simplices in high dimensions \n [11] High-dimensional centrally symmetreic polytopes with neighborliness proportional to dimension \n$M = O(K {\\text log}(N))$ \n$M \\geq C \\cdot K \\cdot {\\text log}N$ \n \n[12] Compressive Sensing, R.G.Baranuik\n \n$M \\geq C \\cdot K {\\text log}(N/K)$ \nit cited the result from [8] and [9]. Are they the same? \n \nTo summary, there are 4 expressions: \n1) \n$M = O(K {\\text log}(N))$ \n$M \\geq C \\cdot K \\cdot {\\text log}N$ \n2) \n$M \\geq C \\cdot K {\\text log}(N/K)$ \n \n3) \n$M \\geq C \\cdot ({\\text log}N)^4$ \n$M \\geq C \\cdot ({\\text log}N)^5$ \n4) \n$M \\geq C \\cdot \\mu^2(\\Phi, \\Psi) \\cdot K {\\text log}N$\n \n \n1) and 2) are quite similar with each other; 1) is noisy situation and 2) is noiseless. \n4) is quite similar with 1), except the parameter $\\mu^2(\\Phi, \\Psi)$, which is a measure for the incoherence between the two matrix."], "link": "http://hao1990.blogspot.com/feeds/9153704530618449715/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u8bb0\u5f55\u4e0b\u6700\u8fd1\u7684idea \n\u6700\u4e3b\u8981\u7684project\u8fd8\u662fpaper wiki \u5e0c\u671b\u80fd\u5728\u653e\u5047\u524d\u642d\u597d\u8fd9\u4e2a\u5e73\u53f0 \n \n\u53c8\u60f3\u505a\u4e00\u4e2a\u7c7b\u4f3c\u543e\u5fd7 \u4f46\u662f\u53ea\u662f\u8bb0\u5f55/share dream\u7684\u7f51\u7ad9 \u521b\u610f\u6765\u6e90\u4e8exxxHolic\u7684\u68a6\u4e70 \u8fd9\u4e2a\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u8003\u8651 \u6bd4\u5982\u662f\u5426\u5e94\u8be5\u505a\u6210\u4e00\u4e2a\u7f51\u7ad9\u8fd8\u662f\u53ea\u662f\u4e00\u4e2a\u73b0\u6709SNS\u7684app \u5982\u679c\u662fAPP \u6015\u7834\u574f\u7684\u8fd9\u4e2aidea\u7684pure goal \u4f46\u662f\u505a\u6210\u4e00\u4e2awebsite \u53c8\u89c9\u5f97\u6ca1\u6709\u7279\u522b\u5927\u7684\u5e02\u573a \u9700\u8981\u6570\u636e\u5e93\u652f\u6301etc.. \n\u4f46\u662f\u4f3c\u4e4e\u505a\u8d77\u6765\u4e0d\u96be \u53ea\u662f\u8981\u53bb\u627e\u73b0\u6210\u7684\u6846\u67b6 \n \n\u8fd8\u60f3\u505a\u4e00\u4e2a\u521b\u610f\u5206\u4eab\u7f51\u7ad9 \u5173\u6ce8\u4e8e\u751f\u6d3b\u4e2d\u60f3\u5230\u7684\u5c0f\u521b\u610f \u5bfb\u627e\u6709\u7c7b\u4f3c\u521b\u610f\u7684\u4eba\u4e00\u8d77\u5f00\u53d1app\u4e4b\u7c7b\u7684 \u6216\u8005\u50cf\u670d\u52a1\u5546\u63d0\u4f9b\u9700\u6c42\u5efa\u8bae etc. \n\u8fd8\u662f\u89c9\u5f97\u8fd9\u79cd\u7c7b\u578b\u7684\u7f51\u7ad9 \u7f8e\u5de5\u5f88\u91cd\u8981\u7684\u6837\u5b50 \n \n\u8fd8\u60f3\u505a\u4e00\u4e2a\u7c7b\u4f3cWikiCFP\u7684\u7f51\u7ad9 \u4e3b\u8981\u7528\u4e8e\u53d1\u5e03/\u6536\u96c6\u5404\u7c7b\u7ade\u8d5b\u4fe1\u606f \u65b9\u4fbf\u9ad8\u6821\u5b66\u751f\u67e5\u8be2/\u53c2\u4e0e \u5e2e\u52a9\u4f01\u4e1a\u63a8\u5e7f\u7ade\u8d5b \u8fd9\u4e5f\u662f\u56e0\u4e3a\u53d1\u73b0\u5f88\u591acompetition\u90fd\u5728\u60f3\u65b9\u8bbe\u6cd5\u63d0\u9ad8\u81ea\u5df1\u7684\u77e5\u540d\u5ea6 \u8fd9\u4e2a\u4f3c\u4e4e\u505a\u8d77\u6765\u4e5f\u4e0d\u96be \u51e0\u4e4e\u53ef\u4ee5\u5b8c\u5168copy WikiCFP \u4e0d\u8fc7\u540e\u671f\u505a\u597d\u4e5f\u9700\u8981\u7f8e\u5de5\u65b9\u9762\u7684UI\u8bbe\u8ba1 \n \n\u8fd8\u6709\u4e00\u4e9b\u5b9e\u73b0\u6709\u4e9b\u56f0\u96be\u7684\u4e1c\u897f\u4e86 \u5475\u5475 \n\u6bd4\u5982\uff0c\u505a\u4e00\u4e2a\u505a\u996d/\u6d17\u7897\u673a\u5668\u4eba \u53ef\u4ee5\u8f93\u5165\u83dc\u8c31\u7a0b\u5e8f \u7136\u540e\u5c31\u53ef\u4ee5\u505a\u996d\u4e86~\u3002~ \u8fd8\u53ef\u4ee5\u5b9a\u65f6\u505a\u996d \u8fdc\u7a0b\u63a7\u5236\u505a\u996d... \n* \u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u5f00\u53d1app\u5e73\u53f0 \u505a\u4e00\u4e2aapp\u63a8\u8350\u83dc\u8c31 or \u6839\u636e\u5bb6\u91cc\u7684\u83dc\u89c4\u5212\u8981\u505a\u7684\u83dc\uff08\u5bf9\u4e8e\u4e00\u6b21\u4e70N\u5929\u83dc\u7684\u4eba\uff09 \u63d0\u9192\u83dc\u8fc7\u671f... \n\u8fd8\u6709\u5c31\u662f\u667a\u80fd\u767d\u677f\uff08\u7b14\uff09 \u53ef\u4ee5\u5728\u73bb\u7483\u677f/\u767d\u677f\u4e0a\u6f14\u7b97/\u6f14\u793a/\u8bb0\u5f55... \u7136\u540e\u7528\u7b14\u9009\u53d6\u533a\u57df \u5373\u53ef\u4f20\u9001\u5230\u7ec8\u7aef\uff08\u7535\u8111 \u6253\u5370\u673a....\uff09 \n \n\u53ef\u662f\u90fd\u4e0d\u662f\u6211\u7684\u4e13\u4e1a \u4e5f\u4e0d\u80fd\u7528\u6765\u4f5c\u4e3a\u73b0\u5728\u7684Research \u53ea\u80fd\u4e1a\u4f59\u7684\u65f6\u95f4\u505a\u505a\u4e86 \n\u8981\u662f\u4e0d\u7528\u5b66\u4e60\u4e0d\u7528\u5de5\u4f5c\u5c31\u53ef\u4ee5\u751f\u6d3b \u4f30\u8ba1\u5c31\u53ef\u4ee5\u4e13\u5fc3\u505a\u8fd9\u4e2a\u4e86 \n\u5927\u6982\u53ea\u80fd\u7ee7\u7eed\u8bfbPhD\u4e86\u5427 \u5475\u5475"], "link": "http://hao1990.blogspot.com/feeds/7138315192852315662/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["MathJax can help you with this. \nSee http://irrep.blogspot.com/2011/07/mathjax-in-blogger-ii.html for the instruction. \n \nIt's awesome."], "link": "http://hao1990.blogspot.com/feeds/2674901343850035527/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "http://irrep.blogspot.com/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["Last article, I briefly introduce existing cs method on image. This article aims to summary how block cs worked on image. \n \n \n \n Before I go on, I need to introduce something about measurement matrix. \n \n Currently, there are several way to generate a measurement matrix. For a complete list of possible measurement matrix, please refer to \n https://sites.google.com/site/igorcarron2/cs . Here I only discuss three of them: \n \n \n Random Fourier Ensemble: The signal is a discrete function f on Z/NZ, and the measurements are the Fourier coefficients at a randomly selected set Omega of frequencies of size M ( A is an M x N matrix.) \n Gaussian ensemble: A is an M x N matrix (M x N Gaussian variables). \n Bernoulli ensemble: A is an M x N matrix (M x N Bernoulli variables). \n \n \n \n It should be noticed that for most of the case, the measurement matrix should be orthonormal. \n \n \n For 1d signal, Gaussian ensemble is enough to reconstruct the signal[1]. However, for 2d image, \n N can be fairly large, which makes the storage and computations of a Gaussian ensemble very difficult. Thus, [2] suggested to apply a partial random Fourier matrix \u3002 For sparse basis, it employed wavelet . Besides, it uses min tv instead of l1norm as recon strategy. However, I've found no simulation code available for [2]. \n \n \n \n \n Another possible way to solve the problem addressed before is to sample the image block by block. This is quite similar with what JPEG did. [3] gives out corresponding research. For measurement matrix, the paper uses i.i.d Gaussian ensembles . For sparse basis, it uses LT . The reconstruction is based on PoCS and Hard Thresholding . No simulation code available now. But you may refer to https://sites.google.com/site/igorcarron2/cscodes . There is a code called sbhe.m , \n \n Implemented from Fast compressive imaging using scrambled block Hadamard ensemble by Lu Gan , Thong Do and Trac Tran. This is another algorithm proposed by the same author. It may help you. \n \n \n To improve the performance of [3], [4] proposed to first decompose the coefficients into dense and sparse component. For dense component, it uses conventional encoding; for sparse component, it uses cs. For measurement matrix, it didn't clearly indicate in the paper. But from inference, it should use i.i.d Gaussian ensembles as in [3]. It still employs wavelet as sparse basis. The reconstruction is based on PoCS [2] and prediction by adaptive interpolation . The paper gives out the detailed reconstruction scheme. No simulation code available now. \n \n After that, [5] gives some interesting simulation results. Here for measurement matrix, it should still use i.i.d Gaussian ensembles .But for sparse basis, it proposed to use Directional Transformation(CT and DDWT) .The reconstruction is based on SPL . Simulation code is available at http://www.ece.msstate.edu/~fowler/BCSSPL/ . Besides I am quite interested in analyzing the EXPERIMENTAL RESULTS part in this paper. It compares with several other methods. \n 1. To compare the effectiveness of CT and DDWT, it compares to BCS-SPL-DWT, BCS-SPL-DCT. The simulation code is not available now. \n 2. To compare SPL with TV, it compares with BCS-TV. The implementation is using l1-Magic(http://acm.caltech.edu/l1magic/). I have implemented the code at http://www.ualberta.ca/~hfang2/pub/Block CS-TV.zip . \n 3. To compare SPL with GPSR and SAMP, it uses the implementation provided by their respective authors(http://www.lx.it.pt/~mtf/GPSR/ http://thongdojhu.googlepages.com/samp_intro/ ). \n \nThe last one is [6]. It perform random permutation among blocks to achieve better performance. It uses DCT as sparse basis. For measurement matrix, it uses i.i.d Gaussian ensembles .It uses min l1-norm instead of min tv as reconstruction method. I recommend you use cvx_toolbox( http://cvxr.com/cvx/download/ ) for simulation. \n \n If you find any simulation code published, or any error in the article, please contact me. \n Thanks a lot. \n \n [1] Robust uncertainty principles: Exact signal reconstruction form highly incomplete frequency information \n [2] Practical Signal Recovery from Random Projections \n [3] Block Compressed Sensing of Natural Images \n [4] Image Representation by Compressed Sensing [5] Block compressed sensing of images using directional transforms [6] Compressive Sampling With Coefficients Random Permutations for Image Compression"], "link": "http://www.ualberta.ca/~hfang2/pub/Block%20CS-TV.zip", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "https://sites.google.com/": 3, "http://www.ac.uk/": 1, "http://cvxr.com/": 1, "http://www.msstate.edu/": 1, "http://www.rice.edu/": 1, "http://www.jhu.edu/": 1, "http://www.google.com/": 1, "http://www.ualberta.ca/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["CS\u6700\u521d\u7531[1][2][3]\u63d0\u51fa\u3002[1, 2]\u6ca1\u6709\u770b\uff0c[3]\u4e2d\u7406\u8bba\u63a8\u5bfc\u6bd4\u8f83\u591a\u3002\u6211\u5efa\u8bae\u8bfb[4]\u4f5c\u4e3a\u5165\u95e8\u3002 \n \u6700\u521d\u7684CS\u7406\u8bba\u53ea\u63d0\u51fa\u4e86noiseless\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5accurately recover compressible signal\uff0c\u6ce8\u610f\u662f\u9700\u8981compressible signal\u7684\uff0c\u4e0d\u8fc7\u5927\u591a\u6570\u4fe1\u53f7\u7684\u662fcompressible signal,\u6240\u4ee5\u9002\u7528\u9762\u5f88\u5e7f\u3002 \n \u4e8e\u662f\u6709\u4eba\u5c31\u4f1a\u60f3\u5728noisy\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u5426\u53ef\u4ee5\u4f7f\u7528CS\u5462\uff1f \n \u6700\u521d\u7684\u7814\u7a76\u662f\uff0cNoisy measurements\u7684\u6062\u590d\u6548\u679c\u4e0d\u662f\u5f88\u597d\u3002\u6240\u4ee5Wisconsin\u7684\u4fe9\u4ebaJ. Haupt\u548cR. Nowak\u5c31\u5bf9zero-mean additive noise\u7684\u60c5\u51b5\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\u76f8\u5173\u5de5\u4f5c\u53ef\u4ee5\u53c2\u770b[5]\u3002\u4ed6\u4eec\u7684\u7ed3\u8bba\u5f53\u65f6\u662f\u53ef\u4ee5\u5728\u8fd9\u79cd\u52a0\u6027\u566a\u58f0\u7684\u60c5\u51b5\u4e0b\u6062\u590d\u539f\u4fe1\u53f7\uff08\u5426\u5219\u5c31\u6ca1\u6cd5\u53d1paper\u4e86...\uff09\u3002 \n \u5bf9\u4e4b\u540eCS\u65b9\u9762\u7684\u6587\u732e\u5c31\u4e0d\u5728\u8fd9\u7247\u6587\u7ae0\u91cc\u63cf\u8ff0\u4e86\u3002 \n \n \u63a5\u4e0b\u6765\u6211\u60f3\u91cd\u70b9\u8bb2\u4e00\u4e0bcs\u7528\u4e8eimaging\u7684\u6587\u732e\u53d1\u5c55\u5386\u7a0b\u3002 \n \u4e00\u822c\u6765\u8bf4\uff0c\u7814\u7a76\u90fd\u653e\u5728\u5982\u4f55\u91c7\u6837\u4e00\u4e2a\u56fe\u50cf\u6216\u8005\u5982\u4f55\u538b\u7f29\u4e00\u4e2a\u56fe\u50cf\u3002 \n \u5bf9\u4e8e2D\u7684\u56fe\u50cf\uff0c\u7531\u4e8e\u7ef4\u6570\u8f83\u5927\uff0c\u5bfc\u81f4CS\u9762\u4e34\u6709\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a \n 1. \u91cd\u5efa\u7b97\u6cd5\u8ba1\u7b97\u91cf\u5927 \n 2. \u9700\u8981\u5927\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u6765\u4fdd\u5b58\u968f\u673a\u91c7\u6837operator\uff0c\u5373measurement matrix \n \n 05\u5e74\u7684\u65f6\u5019\uff0c\u5728[6]\u4e2d\u6700\u521d\u5bf92D\u56fe\u50cf\u4fe1\u53f7\u8fdb\u884c\u4e86CS reconstruction\u5e76\u7ed9\u51fa\u4e86\u5176\u4eff\u771f\u7ed3\u679c\uff0c\u4e0d\u8fc7\u8fd9\u7bc7\u6587\u7ae0\u53ea\u8ba8\u8bba\u4e86\u65e0\u566a\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u6ca1\u6709\u7ed9\u51fa\u6709\u566a\u60c5\u51b5\u7684\u5206\u6790\u3002\u4f5c\u8005\u7684\u4e3b\u8981\u65b9\u6848\u662f apply a partial random Fourier matrix in the wavelet domain\u3002 \n 06\u5e74[3] \u63d0\u51fa multiscale CS\uff1a different scales of wavelet coefficients are segregated and sampled with partial Fourier ensembles\u3002 \n \u4e5f\u662f06\u5e74\u7684\u65f6\u5019\uff0c[9]\u5c31\u5bf9CS\u662f\u5426\u80fd\u4f5c\u4e3a\u4e00\u79cdimaging method\u8fdb\u884c\u4e86\u68c0\u9a8c\uff0c\u4e3b\u8981\u8003\u8651\u6709\u566a\u60c5\u51b5\u4e0b\u662f\u5426\u80fd\u591f\u6709\u5f88\u597d\u7684\u6027\u80fd\uff0c\u5c06\u5176performance\u4e0e\u6807\u51c6\u7684pixel-based\u91c7\u6837\u65b9\u6848\u8fdb\u884c\u6bd4\u8f83\u3002\u6700\u7ec8\u7ed3\u8bba\u662f\uff1aCS\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u4f18\u4e8e\u4f20\u7edf\u50cf\u7d20\u91c7\u6837\uff1a \n \n \n if the underlying image is highly compressible or \n \n \n or if the SNR is sufficiently large \n \n \n \u53e6 \u5916[9] \u8fd8\u6bd4\u8f83\u5168\u9762\u7684\u4ecb\u7ecd\u4e86\u5bf9piecewise constant\u8fd9\u4e2a\u7c7b\u522b\u7684\u56fe\u50cf\u8fdb\u884c\u538b\u7f29\u4f20\u7edf\u7684\u505a\u6cd5\u3002\u5e76\u7ed9\u51fa\u4e86\u76f8\u5e94\u7684squared approximation error\u4f5c\u4e3a\u6027\u80fd\u8861\u91cf\u6807\u51c6\u3002 \n \n  \n \n \n \n 07\u5e74L. Gan\u57fa\u4e8e[6]\u7684\u7406\u8bba\u63d0\u51fa\u4e86block compressed sensing[7]\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u6211\u8ba4\u4e3a\u5f88\u591a\u540e\u7eed\u5bf9\u56fe\u50cf\u538b\u7f29\u7684\u7814\u7a76\u7684\u57fa\u7840\uff0c\u975e\u5e38\u5efa\u8bae\u4e00\u8bfb\u3002 \n \n08\u5e74MSRA\u7684\u4e00\u5e2e\u4eba\u63d0\u51fa\u4e86\u5c06\u56fe\u50cf\u7684coefficients\u8fdb\u884c\u5206\u89e3[8]\uff0c\u5bf9\u4e8edense\u7684\u90e8\u5206\u8fdb\u884cconventional encoding \uff08\u53d8\u6362\u7f16\u7801\uff09\uff0csparse\u7684\u90e8\u5206\u8fdb\u884cCS\u3002\n \n \n [7]\u548c[8]\u90fd\u7ed9\u51fa\u4e86PSNR\u6548\u679c\uff0c\u662f\u5f88\u597d\u7684\u6bd4\u7167\u5bf9\u8c61\u3002\n \n \n [14]\u662f\u57fa\u4e8e[6]\u7684\u4e00\u4e2a\u6539\u8fdb\u3002\u9664\u4e86\u7b97\u6cd5\u90e8\u5206\uff0c\u6211\u63a8\u8350\u770b\u4e00\u4e0bBackground\u8fd9\u4e00\u90e8\u5206\uff0c\u5b83\u6bd4\u8f83\u5b8c\u6574\u7684\u4ecb\u7ecd\u4e86\u5f53\u524dCS\u7684\u4e00\u4e9b\u7b97\u6cd5\u3002\u540c\u65f6\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e5f\u5bf9[6]\u8fdb\u884c\u4e86review\uff0c\u6709\u52a9\u4e8e\u7406\u89e3[6]\u7684\u7b97\u6cd5\u3002\u53e6\u5916\uff0c\u8fd9\u7bc7\u6587\u7ae0\u7ed9\u51fa\u4e86\u4e0d\u540cCS\u7b97\u6cd5\u4e0b\u7684PSNR\uff0c\u6709\u6bd4\u8f83\u7cfb\u7edf\u7684\u4eff\u771f\u7ed3\u679c\uff0c\u53ef\u4f9b\u53c2\u8003\u3002\n \n \n 11\u5e74\uff0c[15]\u63d0\u51fa\u4e86\u57fa\u4e8e[6]\u7684\u53e6\u4e00\u79cd\u6539\u8fdb\u3002\u4f5c\u8005\u5bf9\u7a00\u758f\u7cfb\u6570\u77e9\u9635\u8fdb\u884crandom permutation\u4ece\u800c\u4f7f\u7a00\u758f\u5ea6\u5206\u5e03\u8d8b\u8fd1\u4e00\u81f4\uff0c\u4ece\u800c\u63d0\u9ad8CS\u7684\u6027\u80fd\u3002\n \n \n 08\u5e74T. Wan\u7b49\u4eba\u63d0\u51fa\u5c06cs\u5e94\u7528\u4e8eimage fusion[10]\uff0c09\u5e74A. Divekar\u4e5f\u4f5c\u4e86\u7c7b\u4f3c\u7684\u7814\u7a76[11]\u3002image fusion\u5c31\u662f\u5c06\u4ece\u4e0d\u540csensor\u5bf9\u540c\u4e00\u4e2a\u573a\u666f\u7684\u56fe\u50cf\u7ed3\u5408\u8d77\u6765\u4e00\u53d1\u73b0\u5176\u4e2d\u7684\u4fe1\u606f\u3002\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u8fd9\u4e24\u7bc7\u6587\u7ae0\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u89e3\u91ca\u3002 \n \n 09\u5e74\u5f00\u59cb\uff0c\u7814\u7a76\u8005\u5f00\u59cb\u8003\u8651colored image\uff0c\u4ece\u800c\u5c06CS\u4ece2D image\u8f6c\u5230\u4e863D\u3002[12]\u7684\u4f5c\u8005\u63d0\u51fa\u4f7f\u7528Bayer Filter\u4ee5\u53caJoint Sparsity Model\u6765exploit\u4e0d\u540c\u8272\u5f69\u4fe1\u9053\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\u7ed3\u679c\u663e\u793a\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u666e\u901a\u7684\u5bf9\u5404\u4e2a\u4fe1\u9053\u72ec\u7acb\u8fdb\u884cCS\u6548\u679c\u66f4\u597d\u3002 \n \n 08\u5e74\uff0cCS\u754c\u7684\u4e00\u4f4d\u725b\u4ebaJ. Romberg\u4f7f\u7528noiselet\u6982\u5ff5\uff08\u7c7b\u4f3cwavelet\uff09\uff0c\u5e76\u4e14\u4f7f\u7528min TV\u800c\u4e0d\u662fmin l1\u8fdb\u884c\u56fe\u50cf\u91cd\u5efa[13]\u3002TV\u4e2d\u7684\u68af\u5ea6\u8fd0\u7b97\u53ef\u4ee5\u4fc3\u8fdbsmoothing\uff0c\u66f4\u52a0\u9002\u5408images\u3002\u8fd9\u4e5f\u662f\u5927\u591a\u6570CS imaging\u7684\u6062\u590d\u7b97\u6cd5\u3002\u4f46\u662fNoiselet\u7528\u4e8e\u7a00\u758f\u57fa\u5728\u56fe\u50cf\u65b9\u9762\u7684\u540e\u7eed\u7814\u7a76\u6211\u8fd8\u6ca1\u6709\u770b\u5230\uff0c\u6709\u53ef\u80fd\u662f\u6211\u9057\u6f0f\u4e86\u3002 \n \n \u4ee5\u4e0a\u5c31\u662f05\u5e74\u523011\u5e74\u5927\u90e8\u5206\u5173\u4e8ecs\u7528\u4e8eimage\u65b9\u9762\u7684paper\u7efc\u8ff0\uff0c\u5e0c\u671b\u6709\u52a9\u4e8e\u5927\u5bb6\u7406\u89e3\u3002 \n \u6709\u9519\u8bef\u4e4b\u5904\u6b22\u8fce\u6307\u51fa\u3002 \n \n [1] Roubust uncertainty principles: Exact Signal Reconstruction from Highly Incomplete Frequency Information \n [2] Near optimal signal recovery from random projections: Universal Encoding Strategies? \n [3] Compressed Sensing \n [4] Introduction to compressed sampling \n [5] Signal reconstruction from noisy random projections \n [6] Practical Signal Recovery from Random Projections \n [7] Block compressed sensing of natural images \n [8] Image representation by compressed sensing \n [9] Compressive Sampling VS. Conventional Imaging \n [10]Compressive image fusion \n [11]Image fusion by compressive sensing \n [12]Compressive imaging of color images \n [13]Imaging via Compressive Sampling \n [14]Block compressed sensing of images using directional transforms \n [15]Compressive Sampling with Coefficients Random Permutations for Image Compression"], "link": "http://hao1990.blogspot.com/feeds/8584174262952529622/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u6628\u5929\u7ed9\u81ea\u5df1\u914d\u4e86\u4e00\u4e0bPHP\u7684\u73af\u5883\uff0c\u5f04\u4e86\u6709\u4e00\u4f1a\u3002 \n \n \u7f51\u4e0a\u7684\u6559\u7a0b\u4e5f\u770b\u4e86\uff0c\u8fd8\u662f\u81ea\u5df1\u5199\u4e00\u4e0b\uff0c\u4ee5\u540e\u53ef\u4ee5\u53c2\u8003\uff0c\u5475\u5475\u3002 \n \n \n \n \u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u6559\u7a0b\u6709\u51e0\u4e2a\u524d\u63d0\u8981\u6c42\uff1a \n \n 1. Windows\uff1b Linux\u4e0b\u7684\u6211\u6ca1\u914d\u8fc7\uff0c\u6240\u4ee5\u4e0d\u662f\u5f88\u6e05\u695a\u3002 \n \n 2. Apache2.2\uff1b\u7248\u672c\u6bd4\u8f83\u91cd\u8981\uff0c\u4e0d\u540c\u7684\u7248\u672c\u4e5f\u6709\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\u914d\u6cd5~\u6240\u4ee5\uff0c\u5982\u679c\u662f\u8981\u914d\u7f6e\u5176\u4ed6\u7248\u672c\u7684\u8bdd\uff0c\u8bf7\u6362\u5173\u952e\u5b57\u641c\u7d22~~\u5475\u5475~ \n \n 3.PHP5.3.3\uff1b \u540c\u6837\u662f\u7248\u672c\u7684\u95ee\u9898~ \n \n \n \n \u597d\u4e86\uff0c\u73b0\u5728\u5f00\u59cb\u914d\u7f6e\u5427\u3002 \n \n 1. \u9996\u5148\uff0c\u5148\u8981\u4e0bApache2.2\u3002\u6211\u4e0b\u7684\u662fhttpd-2.2.16-win32-x86-no_ssl.msi\uff0c\u5b89\u88c5\u5230C:\\Program Files\u91cc\u4e86 \n \n 2. \u7136\u540e\uff0c\u628aPHP5.3.3\u4e5f\u4e0b\u4e0b\u6765\uff0c\u6ce8\u610f\uff0c\u8981\u4e0bphp-5.3.3-Win32-VC6-x86.zip\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4e0d\u8981\u6709nts\uff0c\u4e5f\u4e0d\u8981\u662fVC9\u4ec0\u4e48\u7684\u3002\u6211\u4e00\u5f00\u59cb\u5c31\u4e0b\u9519\u4e86\uff0c\u7136\u540e\u7f3a\u6587\u4ef6\u4e4b\u7c7b\u7684- -\u3002 \n \n \u8fd9\u4e2a\u5c31\u76f4\u63a5\u89e3\u538b\u7f29\u5c31\u597d\u4e86\uff0c\u653e\u5728C:\\php\u76ee\u5f55\u4e0b\u3002\uff08\u8fd9\u4e2a\u76ee\u5f55\u5e95\u4e0b\u5e94\u8be5\u5c31\u76f4\u63a5\u662f\u6587\u4ef6\u4e86\uff0c\u4e0d\u662f\u89e3\u538b\u5f97\u5230\u7684\u6587\u4ef6\u5939\u54e6\uff09\u3002 \n \n \n \n 3. \u88c5\u597dApache\u4e4b\u540e\uff0c\u53ef\u4ee5\u6253\u5f00Apache\u670d\u52a1\uff0c\u7136\u540e\u8bbf\u95eelocalhost\u4e00\u4e0b\uff0c\u770b\u770b\u662f\u4e0d\u662f\u88c5\u597d\u4e86\u3002\u57fa\u672c\u4e0a\u8fd9\u6b65\u4e0d\u4f1a\u51fa\u95ee\u9898\u7684\u3002 \n \n 4. \u914d\u7f6ePHP\u3002 \n \n \u5173\u952e\u6b65\u9aa4~\uff08\u6211\u5f15\u7528\u4e86 http://www.blogjava.net/zyw090111/archive/2010/08/07/328197.html \u91cc\u9762\u7684\u65b9\u6cd5\uff09\uff0c\u4e0d\u8fc7\u6709\u4e00\u4e9b\u6ce8\u91ca\u7684\u5730\u65b9\u662f\u6211\u505a\u9519\u7684\u70b9\u3002 \n \n 1\uff09 \u914d\u7f6ePHP5.3.3\uff0c\u6253\u5f00php\u5b89\u88c5\u76ee\u5f55\uff08C:\\php\uff09\u53ef\u4ee5\u770b\u5230\u76ee\u5f55\u4e0b\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u6587\u4ef6 php.ini-development\u548cphp.ini-production\uff0c\u7b2c\u4e00\u4e2a\u662f\u5f00\u53d1\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6807\u51c6\u7684\u751f\u4ea7\u73af\u5883\u7684\u914d\u7f6e\u3002 2\uff09\u9009\u62e9php.ini-development\u590d\u5236\u4e00\u4efd\u5230\u540c\u76ee\u5f55\u4e0b\uff0c\u5e76\u6539\u540d\u4e3aphp.ini\u4f7f\u7528\u6587\u672c\u5de5\u5177\u6253\u5f00\uff0c\u67e5\u627eextension_dir\uff0c\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\uff0c\u9009\u62e9On windows: \n \n \u4e0b\u9762\u7684\u90a3\u4e2a\u5e76\u53bb\u5f97\u524d\u9762\u7684 \u5206\u53f7 \u4fee\u6539\u4e3aextension_dir = \"C:/php/ext\"\uff0c\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u76ee\u5f55\u7ed3\u6784\u914d\u7f6e\uff0c\u76ee\u7684\u662f\u627e\u5230\u548cphp.ini\u540c\u76ee\u5f55\u4e0b\u7684ext\u6587\u4ef6\u5939\u4e2d\u7684\u6269\u5c55\u5e93\u3002  \n \n  \uff01\uff01\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u8981\u53ea\u6539\u4e86\u76ee\u5f55\uff0c\u800c\u6ca1\u6709\u628a\u5206\u53f7\u53bb\u6389- -\u5206\u53f7\u6ca1\u53bb\u6389\u8fd9\u53e5\u8bdd\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\u3002  \n \n  \u68c0\u6d4b\u65b9\u6cd5\u662f\uff0c\u5199\u4e00\u4e2aindex.php\u6587\u4ef6  \n \n  <? phpinfo()?>\u653e\u5728Apache\u7684\u8bbf\u95ee\u7684\u6587\u4ef6\u5939\u4e0b\uff08\u53ef\u4ee5\u67e5\u770bApache22/conf/httpd.conf,\u641c\u7d22DocumentRoot\uff09\uff0c\u9ed8\u8ba4\u662fApache22/htdoc\u8fd9\u4e2a\u6587\u4ef6\u5939\u3002\u7136\u540e\u8bbf\u95eelocalhost/index.php\uff0c\u53ef\u4ee5\u770b\u5230  \n \n \n \n Configuration File (php.ini) Path C:/Windows \n Loaded Configuration File C:/php/php.ini \n \n \n \n \n \u4ee5\u53ca \n \n \n \n extension_dir C:/php/ext C:/php/ext \n \n \n \n \n \n \u8fd9\u5c31\u8bf4\u660e\u914d\u7f6e\u5bf9\u4e86\uff0c\u5426\u5219\uff0c\u9700\u8981\u5728\u4e0b\u9762\u7684\u6b65\u9aa4\u4e2d\u628a\u6587\u4ef6\u62f7\u8d1d\u5230\u76f8\u5e94\u76ee\u5f55\u3002 3)\u67e5\u627eextension=php_\uff0c\u53bb\u6389 extension=php_curl.dll\u3001extension=php_gd2.dll\u3001extension=php_mbstring.dll\u3001 extension=php_mysql.dll\u3001extension=php_mysqli.dll\u3001extension=php_pdo_mysql.dll\u3001extension=php_xmlrpc.dll \u524d\u9762\u7684\u5206\u53f7\u3002\u67e5\u627eshort_open_tag = Off\u628a\u5b83\u4fee\u6539\u6210short_open_tag = On\uff0c\u8ba9\u5176\u652f\u6301\u77ed\u6807\u7b7e\u3002 \n \n \u8fd9\u4e00\u6b65\u7684\u4f5c\u7528\u662f\u5f00\u542f\u4e00\u4e9b\u529f\u80fd\uff0c\u5982curl\uff0cmysql\u7b49\u3002\u800c\u8fd9\u4e9bdll\u6587\u4ef6\u90fd\u662f\u653e\u5728C:/PHP/EXT\u76ee\u5f55\u4e0b\u7684\uff0c\u4e5f\u5c31\u662f\u7531\u4e0a\u4e00\u6b65\u8bbe\u7f6e\u7684extension_dir\u51b3\u5b9a\u7684\u3002 4)\u590d\u5236php5ts.dll\u6587\u4ef6\u5230WINDOWS/system32\u76ee\u5f55\u4e0b\uff0c\u53ea\u6709 php-5.3.3-Win32-VC6-x86 \u7248\u672c\u4e2d\u624d\u6709php5ts.dll php-5.3.3-nts-Win32-VC6-x86\u7248\u672c\u662f\u6ca1\u6709\u7684\u3002 \n \n 5)\u590d\u5236libeay32.dll ssleay32.dll\uff08C:/PHP\uff09\u5230C:/windows\u4e0b\u3002 \n \n \uff08\u4e4b\u6240\u4ee5\u6709\u8fd9\u4e00\u6b65\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u7c7b\u4f3c\u7684\u67d0\u4e2a\u76ee\u5f55\u6ca1\u6709\u914d\u597d\uff0c\u9ed8\u8ba4\u5728C\uff1a/windows\u4e0b\u3002\u4f46\u6682\u65f6\u6211\u8fd8\u4e0d\u77e5\u9053\u5728\u54ea\u914d\uff0c\u6240\u4ee5\u4e5f\u5c31\u53ea\u597d\u9ed8\u8ba4\u4e86- -\uff09 \n \n \n \n \n \n \u8fd9\u6837\uff0cphp\u7684\u914d\u7f6e\u57fa\u672c\u5c31\u5b8c\u6210\u4e86\u3001"], "link": "http://hao1990.blogspot.com/feeds/2147436545374434586/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "http://www.blogjava.net/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u4e0a\u4e00\u7bc7\u535a\u6587\u5199\u7684\u5173\u4e8e\u5982\u4f55\u6253\u9020\u4f60\u7684iPad\u6210\u4e3a\u5b66\u672f\u5229\u5668 \n\u5f88\u591a\u8f6f\u4ef6\u662f\u548c\u7535\u8111\u4e4b\u95f4\u9700\u8981\u540c\u6b65\u7684 \u6240\u4ee5 \u540c\u6b65\u662f\u4e0b\u5217\u8f6f\u4ef6\u5171\u6709\u7684\u7279\u70b9 \n\u53e6\u5916 \u672c\u7bc7\u535a\u6587\u8fd8\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u81ea\u8eab\u7ba1\u7406\u7684\u8f6f\u4ef6 \n \n \n1. Tiddlywiki + Git + Github \nTiddlywiki \u662f\u4e00\u6b3e\u57fa\u4e8eHtml\u7684\u5355\u6587\u4ef6\u4e2a\u4eba\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf \u5341\u5206\u5bb9\u6613\u4e0a\u624b \n\u4f60\u53ef\u4ee5\u5728\u4e0a\u9762\u5199whatever you want \u968f\u610f\u8bb0\u5f55\u4f60\u9047\u5230\u8fc7\u7684\u5404\u79cd\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3 \n\u53ef\u4ee5\u8bb0\u5f55\u4f60\u7684research diary \n\u53ef\u4ee5\u5199paper review \netc... \n\u800c\u4e14\u5b83\u6709\u5f88\u5f3a\u5927\u7684plugin\u652f\u6301 \u53ef\u4ee5\u5b89\u88c5\u5404\u79cd\u4f60\u60f3\u8981\u7684\u529f\u80fd \n\u8fd9\u4e48\u591a\u4e2a\u4eba\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf\u91cc\u63a8\u8350\u4ed6\u7684\u539f\u56e0\u662f\u4ed6\u662f\u5355\u6587\u4ef6 \u6240\u4ee5\u4fbf\u643a \u4efb\u4f55\u573a\u5408\u53ea\u8981\u6709\u6d4f\u89c8\u5668\u5c31\u80fd\u6253\u5f00 \n\u53e6\u5916\u4ed6\u662f\u552f\u4e00\u4e00\u4e2a\u53ef\u4ee5\u8de8\u5e73\u53f0\u7684wiki \u4f60\u53ef\u4ee5\u968f\u610f\u5728windows linux mac\u4e4b\u95f4\u5207\u6362 \n\u5e76\u4e14\u4ed6\u548cGit\u642d\u914d\u8d77\u6765\u529f\u80fd\u53ef\u4ee5\u53d1\u6325\u5230\u6781\u81f4 \n \nGit\u662f\u4e00\u6b3e\u7248\u672c\u7ba1\u7406\u8f6f\u4ef6 \u6709\u8fc7\u9879\u76ee\u5f00\u53d1\u7ecf\u9a8c\u7684\u540c\u5b66\u90fd\u5e94\u8be5\u63a5\u89e6\u8fc7\u8fd9\u4e2a\u8f6f\u4ef6 \n\u5982\u679c\u6ca1\u6709\u7528\u8fc7 \u5f3a\u70c8\u5efa\u8bae\u5b66\u4e60\u4e00\u4e0b \u5f88\u5bb9\u6613\u4e0a\u624b \u5bf9\u4e8e\u4ee3\u7801\u7684\u7ba1\u7406\u7edd\u5bf9\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u8f6f\u4ef6 \n\u8fd9\u91cc\u4f7f\u7528Git\u4e00\u662f\u4e3a\u4e86\u7ba1\u7406\u4f60\u7684wiki\u7248\u672c \u8fd9\u6837\u5373\u4f7f\u67d0\u4e2a\u7248\u672c\u7684wiki\u5d29\u6e83 \u4e5f\u80fd\u5f88\u5feb\u56de\u6eda\u5230\u4e4b\u524d\u7684\u72b6\u6001 \n\u53e6\u4e00\u4e2a\u76ee\u7684\u662f\u540c\u6b65 \u7ed3\u5408Github \u4f60\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u4ece\u4f60\u7684github\u5e93\u4e0aclone\u4f60\u7684wiki \u5e76\u4e14push\u4f60\u7684\u4fee\u6539 \u5f53\u7136 \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528dropbox\u7b49\u6765\u5b8c\u6210\u7c7b\u4f3c\u529f\u80fd\uff08\u4f46\u662f\u53ea\u6709git\u624d\u6709\u8fd9\u4e48\u5f3a\u5927\u7684\u7248\u672c\u7ba1\u7406\u80fd\u529b\uff09 \n \n\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u7684\u4e24\u4e2a\u57fa\u4e8etiddlywiki\u7684\u5b9e\u73b0\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003 \n\u6211\u7684tiddlywiki: http://funny.tiddlyspot.com \n\u6211\u7684Homepage: http://hfang2.tiddlyspot.com \n \n2. mGSD \n\u5bf9\u65f6\u95f4\u7ba1\u7406\u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u4eba\u90fd\u5e94\u8be5\u77e5\u9053\u8457\u540d\u7684Get Things Done \n\u6ca1\u6709\u770b\u8fc7\u7684\u540c\u5b66\u5f3a\u70c8\u63a8\u8350\u770b\u4ee5\u4e0b\u8fd9\u672c\u8bb2\u65f6\u95f4\u7ba1\u7406\u7684\u4e66 \n\u73b0\u5728\u6709\u5f88\u591aGTD\u7684\u8f6f\u4ef6 \u8fd9\u91cc\u4ecb\u7ecd\u57fa\u4e8etiddlywiki\u7684mGSD \n\u4e2a\u4eba\u5bf9tiddlywiki\u60c5\u6709\u72ec\u949f \u5f53\u7136\u559c\u6b22\u5b83\u7684\u5404\u79cd\u5e94\u7528 \nmGSD\u7b97\u662ftiddlywiki\u4e2d\u53d1\u5c55\u5f88\u5065\u5168\u7684\u4e00\u4e2a\u4f8b\u5b50 \u5b83\u5b8c\u5168\u5b9e\u73b0\u4e86GTD\u7684\u6240\u6709\u529f\u80fd \n\u53c8\u6709tiddlywiki\u7684\u7279\u6027 \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u642d\u914d\u4e0agit\u8fdb\u884c\u7248\u672c\u7ba1\u7406 \n \n3. Live Mesh \n\u4e0a\u6b21\u4ecb\u7ecd\u8fc7\u8fd9\u4e2a\u8f6f\u4ef6 \u8fd9\u4e2a\u8f6f\u4ef6\u7684\u725b\u903c\u4e4b\u5904\u662f\u4f60\u4e0d\u4f46\u53ef\u4ee5\u5728\u4e0d\u540c\u7535\u8111\u4e4b\u95f4\u540c\u6b65\u6587\u4ef6\u5939 \u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u767b\u5f55 \u7b80\u76f4\u5c31\u662f\u795e\u5668\u554a\uff01\u4f60\u53ef\u4ee5\u5728\u5b9e\u9a8c\u5ba4\u8ba9\u6253\u5f00\u4f60\u7684\u4ee3\u7801\u8dd1\u4eff\u771f \u4e5f\u53ef\u4ee5\u5728\u5bb6\u91cc\u6253\u5f00\u5b9e\u9a8c\u5ba4\u7535\u8111\u6253\u5370\u6587\u4ef6 \u603b\u4e4b \u5982\u679c\u4f60\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5e38\u7528\u7535\u8111 \u8fd9\u4e2a\u8f6f\u4ef6\u7edd\u5bf9\u662fTOP 1 \n \n4. MindManager \n\u8fd9\u662f\u4e2a\u601d\u7ef4\u5bfc\u56fe\u8f6f\u4ef6 \u4e0a\u6b21\u5728ipad app\u63a8\u8350\u7684\u65f6\u5019\u63a8\u8350\u4e2a\u8fd9\u4e2a\u8f6f\u4ef6 \n\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u63a8\u8350\u4ed6\u7684\u539f\u56e0 \u4ed6\u53ef\u4ee5\u66f4\u597d\u7684\u548cipad\u642d\u914d\u4f7f\u7528 \u4ed6\u53ef\u4ee5\u628a\u6587\u4ef6\u4e0a\u4f20\u5230\u5176\u7f51\u4e0a\u7a7a\u95f4 \u548cipad\u540c\u6b65 \n\u5f53\u7136 \u4f60\u4e5f\u53ef\u4ee5\u7528freeMind/XMind \u7136\u540e\u4f7f\u7528Dropbox\u548cipad\u540c\u6b65 \u4f46\u662f\u4f3c\u4e4eipad MindManager\u4e0a\u517c\u5bb9\u6027\u8fd8\u4e0d\u662f\u592a\u597d \n\u4e0d\u8fc7 \u8fd9\u4e2a\u4e0d\u662f\u4e2a\u514d\u8d39\u7684\u8f6f\u4ef6 \u4f46\u662f\u6211\u76f8\u4fe1\u8fd9\u96be\u4e0d\u5012\u6211\u4eec\u5f3a\u5927\u4eba\u4e2d\u56fd\u4eba\u6c11\u7684\u667a\u6167\u7684~\u5475\u5475 \n \n5. Mendeley \n\u597d\u4e86 \u8fd9\u4e2a\u662f\u4e2a\u514d\u8d39\u6587\u732e\u7ba1\u7406\u8f6f\u4ef6 \u8fd9\u4e2a\u8f6f\u4ef6\u53ef\u4ee5\u628a\u4f60\u7684\u6587\u732e\u4e0a\u4f20\u5230\u7f51\u7edc\u7a7a\u95f4 \u53ef\u4ee5\u5728\u4e0d\u540c\u7535\u8111\u4e4b\u95f4\u540c\u6b65\u7ba1\u7406 \u540c\u65f6\u53ef\u4ee5\u5728ipad\u4e0a\u540c\u6b65\u6587\u732e \u968f\u65f6\u968f\u5730\u770bpaper \u5475\u5475 \n \n6. Dropbox \n\u8fd9\u4e5f\u662f \u4e3a\u4e86\u7ed3\u5408ipad\u4f7f\u7528\u7684\u8f6f\u4ef6 \u53ef\u4ee5\u968f\u65f6\u540c\u6b65\u4f60\u7684\u6587\u4ef6 \u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u5fc5\u987b\u628a\u6587\u4ef6\u653e\u5728dropbox\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b \u6240\u4ee5\u6211\u4e4b\u524d\u4ecb\u7ecd\u7684Live Mesh\u5c31\u662f\u4e3a\u4e86\u5f25\u8865\u8fd9\u4e2a\u4e0d\u8db3\u6240\u7528\u7684\u8f6f\u4ef6 \n \n7. Evernote \n\u5f3a\u5927\u7684\u4e91\u7b14\u8bb0\u8f6f\u4ef6 \u53ef\u4ee5\u968f\u65f6\u5728\u624b\u673a \u5e73\u677f \u5404\u5904\u7535\u8111\u8bb0\u5f55\u4e8b\u4ef6 \u8fd9\u53ef\u4ee5\u5f25\u8865\u5728\u624b\u673a\u4e0a\u6d4f\u89c8mGSD\u4e0d\u65b9\u4fbf\u7684\u95ee\u9898 \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8bb0\u5f55\u4e00\u4e9b\u5907\u5fd8\u5f55\u7684\u5de5\u5177 \n \n8. Vim \n\u8d85\u5f3a\u7684text editor \u7528\u8fc7linux\u7684\u4eba\u90fd\u5e94\u8be5\u77e5\u9053\u5b83 \u6bd4\u8bb0\u4e8b\u672c\u5f3a\u5927\u5f88\u591a \n\u53ef\u4ee5\u6709\u5f88\u591a\u914d\u7f6e \u4e00\u5f00\u59cb\u7528\u53ef\u80fd\u4f1a\u4e0d\u4e60\u60ef \u4f46\u662f\u4e00\u65e6\u4e0a\u624b \u7edd\u5bf9\u662ftext editor\u4e2d\u7684\u795e\u5668 \n \n9. TexMaker \nLatex\u7f16\u8f91\u5668 \u5199paper\u7684\u4e13\u4e1a\u5de5\u5177 \u5728\u683c\u5f0f\u6392\u7248\u65b9\u9762 \u6bd4word\u597d\u7528\u5f88\u591a"], "link": "http://hao1990.blogspot.com/feeds/396576042896678860/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["iPad\u9664\u4e86\u7528\u6765\u73a9 \u5bf9\u4e8eresearcher\u6765\u8bf4 \u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u4e00\u4e2a\u5b66\u672f\u5229\u5668 \n\u4e0b\u9762\u4ecb\u7ecd\u7684\u5e94\u7528\u57fa\u672c\u4e0a\u90fd\u662ffree\u7684 \u6240\u4ee5\u65e0\u8bba\u4f60\u7684ipad\u6709\u6728\u6709\u8d8a\u72f1 \u90fd\u662fok\u7684 \n \n \n \n Mendeley \u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u7684\u6587\u732e\u7ba1\u7406\u8f6f\u4ef6 \u4f60\u53ef\u4ee5\u5728\u7535\u8111\u4e0a\u7ba1\u7406\u4f60\u7684\u6240\u6709\u6587\u732e \u540c\u6b65\u5230\u670d\u52a1\u5668\u7aef \u5728ipad\u4e0a\u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\u4f60\u7535\u8111\u4e0a\u6240\u6709\u7684\u6587\u732e \n Dropbox \u5f88\u5f3a\u7684\u4e00\u6b3e\u540c\u6b65\u6587\u4ef6\u7684\u8f6f\u4ef6 \u53ef\u4ee5\u5728\u7535\u8111\u548cipad\u4e4b\u95f4\u540c\u6b65\u5f88\u591a\u6587\u6863 \u6ce8\u518c\u5c31\u67092G\u514d\u8d39\u7a7a\u95f4 \u5b83\u4e4b\u6240\u4ee5\u5f3a\u5927\u662f\u56e0\u4e3a\u57fa\u672c\u4e0a\u9700\u8981\u7528\u5230\u6570\u636e\u5171\u4eab\u7684app\uff08\u4e0d\u7ba1ipad android\uff09\u90fd\u4f1a\u6574\u5408dropbox \u6240\u4ee5\u7edd\u5bf9\u662f\u4e0d\u53ef\u6216\u7f3a \n SlideShark \u64ad\u653ePPT\u7684\u8f6f\u4ef6 \u53ef\u4ee5\u8ba9\u4f60\u7684ipad\u64ad\u653ePPT\u6587\u4ef6 \u9700\u8981\u7535\u8111\u901a\u8fc7\u8f6f\u4ef6Upload\u5230\u670d\u52a1\u5668\u8fdb\u884c\u540c\u6b65 \n \u91d1\u5c71\u8bcd\u9738 \u6ca1\u5565\u597d\u8bf4\u7684 \u67e5\u5355\u8bcd \n Caculator++ \u514d\u8d39\u7684\u8ba1\u7b97\u5668\u8f6f\u4ef6 \n Evernote \u5f88\u597d\u7528\u7684\u4e91\u7aef\u8bb0\u4e8b\u672c\u8f6f\u4ef6 \u53ef\u4ee5\u548c\u7535\u8111 \u624b\u673a\u540c\u6b65 \u6211\u7528\u5b83\u6765\u8bb0\u4e00\u4e9b\u5c0f\u4e8b\u60c5 \u5176\u4ed6\u4e8b\u60c5\u6211\u4f7f\u7528mGSD \u4e00\u6b3e\u57fa\u4e8etiddlywiki\u7684GTD\u5de5\u5177 \u6709\u673a\u4f1a\u4e0b\u6b21\u4ecb\u7ecd \n pdf-notes \u514d\u8d39\u7684\u770bpdf\u7684\u8f6f\u4ef6 \u5e76\u4e14\u53ef\u4ee5\u4f5c\u6ce8\u91ca \u529f\u80fd\u5f88\u5f3a\u5927 \n CloudOn \u7f16\u8f91 \u67e5\u770boffice\u6587\u6863\u7684\u8f6f\u4ef6 \n iNoteBook Lite \u96c6\u5408\u65e5\u5386 \u65e5\u8bb0 \u7b14\u8bb0 \u6587\u6863\u7ba1\u7406\u4e8e\u4e00\u8eab\u7684\u8f6f\u4ef6 \u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e0b \n PocketCloud \u8fdc\u7a0b\u767b\u5f55\u7535\u8111\u8f6f\u4ef6 \u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u767b\u5f55\u4f60\u7684\u7535\u8111 \n WifiSendFree \u8ba9\u4f60\u7684ipad\u6210\u4e3a\u7535\u8111\u7684\u952e\u76d8\u548c\u9f20\u6807 \n Mindjet \u601d\u7ef4\u5bfc\u56fe\u5de5\u5177 \u53ef\u4ee5\u548c\u7535\u8111\u7684MindManager\u4e00\u8d77\u4f7f\u7528 \u4e00\u4e2a\u7528\u6765\u7f16\u8f91 ipad\u4e3b\u8981\u7528\u6765\u6f14\u793a MindManager\u7684\u7834\u89e3\u7248\u5927\u5bb6\u597d\u597d\u5229\u7528google\u5c31\u597d\u4e86 \n Timeli \u9879\u76ee\u65e5\u7a0b\u7ba1\u7406\u8f6f\u4ef6 \u7528\u6237\u754c\u9762\u53cb\u597d \n OfficeDrop \u53ef\u4ee5\u968f\u65f6\u5c06\u7eb8\u8d28\u6587\u6863\u901a\u8fc7\u6444\u50cf\u5934\u626b\u63cf\u4fdd\u5b58\u4e3a\u7535\u5b50\u6587\u6863\u5e76\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4fdd\u5b58 \n i-Clickr \u4e00\u6b3e\u63a7\u5236\u7535\u8111PPT\u64ad\u653e\u7684\u8f6f\u4ef6 \u8fd9\u4e2a\u8f6f\u4ef6\u662f\u6536\u8d39\u7684 \u4f46\u662f\u662f\u5750presentation\u7684\u7edd\u5bf9\u5229\u5668 \u53ef\u4ee5\u8bbe\u7f6etimer\u63d0\u9192\u65f6\u95f4 \u53ef\u4ee5\u770bppt\u7684\u5907\u6ce8 \u63a7\u5236PPT\u64ad\u653e \u8fdb\u884c\u6d82\u9e26\u7b49\u7b49 \u6240\u4ee5\u82b1\u94b1\u4e70or\u8d8a\u72f1\u88c5\u90fd\u662f\u503c\u5f97\u7684"], "link": "http://hao1990.blogspot.com/feeds/1504403054204562168/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u5927\u5bb6\u73b0\u5728\u4e0d\u514d\u6709\u591a\u53f0\u7535\u8111 \u6bd4\u5982\u5b9e\u9a8c\u5ba4\u4e00\u53f0 \u5bb6\u91cc\u4e00\u53f0 \n\u6240\u4ee5\u540c\u6b65\u6587\u4ef6\u5939\u5c31\u6bd4\u8f83\u9ebb\u70e6 \u9700\u8981\u7528U\u76d8\u62f7\u6765\u62f7\u53bb \n \nDropbox\u662f\u4e00\u6b3e\u4e0d\u9519\u7684\u540c\u6b65\u8f6f\u4ef6 \u53ef\u4ee5\u548ctablet ipad\u7b49\u540c\u6b65 \u4f46\u662f\u4ed6\u9700\u8981\u628a\u6240\u6709\u7684\u6587\u4ef6\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b \u6bd4\u8f83\u9ebb\u70e6 \nWindows Live Mesh \u662fMicrosoft\u63a8\u51fa\u7684\u529f\u80fd \u53ef\u4ee5\u5c06\u6587\u4ef6\u5939\u540c\u6b65\u5230\u7f51\u7edc\u7aef \u4ece\u800c\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u540c\u6b65 \u800c\u4e14\u6ce8\u518c\u5c31\u67095G\u7684\u514d\u8d39\u7a7a\u95f4 \u5e76\u4e14\u53ef\u4ee5\u8fdc\u7a0b\u767b\u5f55\u684c\u9762 \u975e\u5e38\u597d\u7528 \n \n\u53e6\u4e00\u6b3e\u8f6f\u4ef6SyncToy\u4e3b\u8981\u7528\u4e8e\u5c40\u57df\u7f51\u540c\u6b65\u6216\u8005\u672c\u673a\u6587\u4ef6\u5939\u5907\u4efd \u6bd4\u8f83\u9002\u5408\u9700\u8981\u540c\u6b65\u79fb\u52a8\u786c\u76d8\u6587\u4ef6 \u6216\u8005\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u7684\u7535\u8111\u6587\u4ef6\u5939 \u4f46\u662f\u5bf9\u4e8e\u4e0d\u540c\u5c40\u57df\u7f51\u7684\u6587\u4ef6\u5939\u5c31\u6bd4\u8f83\u590d\u6742\u4e86"], "link": "http://hao1990.blogspot.com/feeds/683054832253647965/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u53d1\u73b0\u4e00\u4e2a\u7f51\u7ad9 \u53ef\u4ee5\u7528\u6765\u5173\u6ce8\u6700\u8fd1\u5f00\u7684conferences workshops\u7b49\u6d88\u606f \n \n\u4e5f\u53ef\u7528\u6765\u53d1\u5e03\u6d88\u606f \n WikiCFP : Call For Papers of Conferences , Workshops and Jounals"], "link": "http://hao1990.blogspot.com/feeds/6643518370308438581/comments/default", "bloglinks": {}, "links": {"http://www.wikicfp.com/": 1, "http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u7cfb\u7edf\u8981\u6c42\uff1a \n android 2.3.3 \n \n \u51c6\u5907\u5de5\u4f5c\uff1a \n \u4e0b\u8f7d Flashtool0.4.2.0.rar \n \n Root \n \n \u5b89\u88c5\u9a71\u52a8 \n \u89e3\u538b\u7f29 flashtool/drivers \u4e2d\u7684X10_ADB_drivers.zip \n \u8bbe\u5907\u7ba1\u7406\u5668-> X10 \uff08\u672a\u77e5USB\u8bbe\u5907\uff09-> \u66f4\u65b0\u9a71\u52a8 \uff08\u9009\u62e9\u6587\u4ef6\u5939 Flashtool -> drivers) \n \n \n \u6253\u5f00X10FlashTool.exe \n \u624b\u673a\u8bbe\u7f6e \u672a\u77e5\u6765\u6e90 \uff08\u8bbe\u7f6e->\u5e94\u7528\u7a0b\u5e8f\uff09\u548c USB\u8c03\u8bd5\uff0c\u4fdd\u6301\u5524\u9192\uff08\u8bbe\u7f6e->\u5e94\u7528\u7a0b\u5e8f->\u5f00\u53d1\uff09 \n \u8fde\u63a5\u624b\u673a \n \u7b49\u5f85Root\u56fe\u6807\u4eae\u8d77 \u70b9\u51fbROOT \n \u671f\u95f4\u4f1a\u91cd\u542f \n \u663e\u793a'root access allowed'\uff0c\u8868\u793aroot\u6210\u529f \n \n \n \u56fe\u6587\u6559\u7a0b\u53ef\u4ee5\u53c2\u8003\uff1a http://sebbs.cnmo.com/thread-10614705-1-1.html \n \n FAQ: \n \n Root\u56fe\u6807\u4e0d\u4eae\u8d77\u662f\u4e3a\u4ec0\u4e48\uff1f \n \n \u68c0\u67e5\u9a71\u52a8\u662f\u5426\u5b89\u88c5\u6210\u529f\uff08\u6309\u7167\u6b65\u9aa41\uff09 \n \n \u5237\u673a\u5931\u8d25 \u542f\u52a8\u65f6\u4e00\u76f4\u5361\u5728\u5f00\u673a\u753b\u9762 \n \n \u5982\u679c\u9a71\u52a8\u6ca1\u6709\u5b89\u88c5\u6b63\u786e\uff0c\u6216\u8005\u6ca1\u6709\u5f00\u542f\u672a\u77e5\u6765\u6e90\u548cUSB\u8c03\u8bd5\uff0c\u6216\u8005\u4f7f\u7528\u4f4e\u7248\u672c\u7684 FlashTool \uff0c\u90fd\u6709\u53ef\u80fd\u51fa\u73b0\u8be5\u60c5\u51b5 \n \u53ef\u4ee5\u7528update service\uff08SE\u63d0\u4f9b\u7684\u66f4\u65b0\u8f6f\u4ef6 \u5347\u7ea7\u8fc7\u7cfb\u7edf\u7684\u4eba\u5e94\u8be5\u90fd\u77e5\u9053\uff09\u91cd\u65b0\u66f4\u65b0\u4e00\u904d\u5c31\u597d\u4e86"], "link": "http://hao1990.blogspot.com/feeds/4624764806387621325/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2, "http://115.com/": 1, "http://sebbs.cnmo.com/": 1}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u53ef\u4ee5\u5728\u5f53\u524d\u5730\u70b9\u521b\u5efa\u56fe\u7247 \u7eaa\u5f55\n\u6709\u70b9\u50cf\u65e5\u8bb0 \u4e0d\u8fc7\u7ed3\u5408\u5730\u70b9\u548c\u56fe\u50cf \u5f88\u6709\u610f\u601d"], "link": "http://hao1990.blogspot.com/feeds/806879674811293379/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["\u4e4b\u524d\u4e00\u76f4\u7528\u7684\u662fEvernote \u5f53\u7136\u5f88\u597d\u7528 \n\u4e0d\u8fc7clibe\u4e0d\u540c\u7684\u662f \u5b83\u53ef\u4ee5\u4f5c\u624b\u5199\u677f \u53ef\u4ee5\u6d82\u9e26 \u53ef\u4ee5\u968f\u610f\u4e71\u753b \n\u800c\u4e14\u80fd\u591f\u521b\u5efa\u4e0d\u540c\u7684\u7b14\u8bb0\u672c \n\u53ef\u4ee5\u7528\u6765\u5934\u8111\u98ce\u66b4 \u505a\u5c0f\u578b\u601d\u7ef4\u5bfc\u56fe \n \n\u63a8\u8350\u5927\u5bb6\u8bd5\u7528 \u514d\u8d39\u7684\u54af"], "link": "http://hao1990.blogspot.com/feeds/3152913293365906161/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}, {"content": ["The DCT usually use 8x8 as the block size to be applied to images. This is a trade-off between computational complexity, compression speed and quality.\n \n \nA lot of research work show that after 15 or 20 pixels, the relationship among them begins to reduce; that is to say, a group of similar pixels usually lasts for 15 to 20, after that, the amplitude would change."], "link": "http://hao1990.blogspot.com/feeds/8301955668088149130/comments/default", "bloglinks": {}, "links": {"http://feedads.doubleclick.net/": 2}, "blogtitle": "Hao's TechBlog"}]