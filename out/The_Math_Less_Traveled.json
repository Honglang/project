[{"blogurl": "http://www.mathlesstraveled.com\n", "blogroll": [], "title": "The Math Less Traveled"}, {"content": ["The Irrationals: A Story of the Numbers You Can\u2019t Count On \n Julian Havil \n Princeton University Press sends me lots of cool books to review! Here\u2019s one. Remember the irrational numbers, which can\u2019t be expressed as a ratio of integers ? I bet you even know a few cool facts about them, like how is irrational , or how there are actually more irrational numbers than rational numbers. Well, here is a whole book full of in-depth history and analysis of the irrationals. It\u2019s really quite astounding how much Havil manages to pack into this book. Do you know what continued fractions have to do with irrationals? (Quite a lot, it turns out.) Or did you know that the golden ratio , , is the most irrational number? And there are transcendental numbers, and the Riemann zeta function\u2026 in my opinion the theory of irrational and transcendental numbers is a really beautiful and astonishing branch of number theory, and Havil does a great job showing it. Be warned , however: this is not a book for casual reading, and it makes no attempt to dumb things down or gloss over details! To fully follow all the details (which few will actually have the patience for) requires excellent algebra skills and occasionally some calculus. It presents the full details of even some relatively recent advances in our understanding of irrational numbers. But for all that it remains quite engaging, and there\u2019s lots to get out of it even if you can\u2019t make it through the whole book."], "link": "http://mathlesstraveled.com/2012/10/25/book-review-the-irrationals/", "bloglinks": {}, "links": {"http://press.princeton.edu/": 1, "http://feeds.wordpress.com/": 1, "http://mathlesstraveled.com/": 2}, "blogtitle": "The Math Less Traveled"}, {"content": ["In a comment on my previous post , Juan Valera mentioned something about visualizing multiples of prime numbers in Pascal\u2019s Triangle: \n \nIn college, there was a poster with different Pascal Triangles, each of them highlighting the multiples of different prime numbers. The patterns were beautiful.\n \n It sounded like a cool idea, so I decided to try it out. Instead of just highlighting which numbers are a multiple of some prime, I decided to assign a different color to each remainder. So everything divisible by a particular prime will be one color (light gray); everything that leaves a remainder of one when divided by that prime will be another color (blue); and so on. \n > {-# LANGUAGE NoMonomorphismRestriction #-} \n > \n > module Pascal where \n > \n > import Diagrams . Prelude \n > import Diagrams . Backend . Cairo . CmdLine \n \n First, some code to actually generate the numbers in Pascal\u2019s Triangle, mod some divisor. The nextrow function takes a row and adds it with itself, shifted by one, to produce the next row; Pascal\u2019s Triangle itself is generated by iterating nextrow starting from a row with a single 1. \n > nextrow :: Integer -> [ Integer ] -> [ Integer ] \n > nextrow d xs = zipWith ( \\ x y -> ( x + y ) `mod` d ) ( 0 : xs ) ( xs ++ [ 0 ] ) \n > \n > pascal :: Integer -> [ [ Integer ] ] \n > pascal d = iterate ( nextrow d ) [ 1 ] \n \n Here are the colors we\u2019ll use for displaying remainders. \n > colors = [ blend 0.3 grey white \n >   , blue , red , yellow \n >   , green , purple , orange \n >   , brown , black , pink \n >   , lightblue , lightgreen \n >   ] \n \n To help lay out the triangle, we create a path at a 60 degree angle with vertices spaced every two units. \n > diag :: Int -> Trail R2 \n > diag n = fromOffsets ( replicate n ( 2 *^ unitX ) ) # rotateBy ( - 1 / 3 ) \n \n \n \n \n \n \n \n Now, to draw a certain number of rows of Pascal\u2019s Triangle with colors for a given divisor, we turn each row into a horizontal line of colored circles, and then use our rotated path from above as a guide to place the start of each row. \n > drawPascal :: Integer -> Int -> Diagram Cairo R2 \n > drawPascal d rows = \n >  decorateTrail ( diag ( rows - 1 ) ) \n >  ( map ( hcat . map drawCell ) \n >  . take rows \n >  $ pascal d \n >  ) \n \n Drawing a single entry of the triangle is just drawing a circle with the right color. \n > drawCell :: Integer -> Diagram Cairo R2 \n > drawCell n = circle 1 # fc ( colors !! fromIntegral n ) # lw 0 \n \n So, let\u2019s draw some triangles! It\u2019s pretty well-known that drawPascal 2 64 gives us a classic Sierpinski gasket: \n \n \n \n \n \n \n And here\u2019s drawPascal 3 81 , which gives us the first 81 rows of Pascal\u2019s Triangle, with each entry colored gray, blue, or red depending on whether it leaves a remainder of 0, 1, or 2 when divided by 3, respectively. \n \n \n \n \n \n \n The gray regions form a pattern very similar to the Sierpinski gasket, but based on 3 instead of 2. There\u2019s also some interesting fractal structure to be noticed in the colored parts. This pattern: \n \n \n \n \n \n \n shows up at all scales, where there is a group of six things with the one in the middle on the bottom inverted in color. Here are the first nine rows of the triangle: \n \n \n \n \n \n \n Notice how that basic pattern of six dots shows up repeated here five times, with a sixth inverted-color copy on the bottom. (Can you prove this pattern continues?) \n What about 4? Four isn\u2019t prime, of course, but that doesn\u2019t stop us. \n \n \n \n \n \n \n This is quite a bit more complicated! I\u2019ll let you stare at it and look for patterns, but I\u2019ll point out one: notice how small copies of the Sierpinski gasket show up all in red: red represents numbers that leave a remainder of two, and when two such numbers are added, we get a number that\u2019s divisible by four. \n Here are the first 125 rows of the triangle mod 5: \n \n \n \n \n \n \n It\u2019s a little hard to see what\u2019s going on there, so here are the first 25 rows only: \n \n \n \n \n \n \n There\u2019s a similar fractal structure happening here as with 3\u2014I\u2019ll let you work it out. \n Here are the first 81 rows mod 6: \n \n \n \n \n \n \n This is one of my favorites\u2014it\u2019s like there\u2019s a yellow copy of the mod-2 Sierpinski gasket \u201chiding\u201d behind a mod-3 pattern! Hmm, and \u2026 Can you explain why this happens? \n Here\u2019s 7\u2014another prime: \n \n \n \n \n \n \n Eight is crazy! I really don\u2019t understand what\u2019s going on here. \n \n \n \n \n \n \n Nine gives us threes within threes: \n \n \n \n \n \n \n Ten, of course, features a five-pattern superimposed on a two-pattern: \n \n \n \n \n \n \n Finally, here\u2019s the basic pattern for 11: \n \n \n \n \n \n \n And here are the first rows for 11: \n \n \n \n \n \n \n PS. I\u2019ll be writing another post soon as a follow-up to my popular post on factorization diagrams , with some improved diagrams (incorporating many suggestions from commenters) as well as links to some related things. \n PPS. Early on in the process of writing this post, I generated this: \n \n \n \n \n \n \n Can you guess what was wrong?"], "link": "http://mathlesstraveled.com/2012/10/20/visualizing-pascals-triangle-remainders/", "bloglinks": {}, "links": {"http://feeds.wordpress.com/": 1, "http://mathlesstraveled.com/": 2}, "blogtitle": "The Math Less Traveled"}, {"content": ["When I mentioned carrying out computational processes with a room full of dominoes , I wasn\u2019t kidding. Matt Parker is planning to build a domino computer at the Manchester Science Festival at the end of the month. The Manchester Science Festival blog has a nice writeup explaining the project . \n Here\u2019s a video of Matt explaining how a domino \u201cAND\u201d gate works (two chains of dominoes come in, and one goes out; the outgoing dominoes will fall only if both incoming chains do). Unfortunately it seems I can\u2019t embed videos on this blog, at least not without giving wordpress some cash =(, so you\u2019ll have to actually click that link to watch the video, but it\u2019s totally worth it (trust me). \n I wish I could go see it, but it\u2019s a bit far for me. Any Math Less Traveled readers in the UK who can actually go watch the computer in action and report back?"], "link": "http://mathlesstraveled.com/2012/10/10/making-a-computer-out-of-dominoes/", "bloglinks": {}, "links": {"http://manchestersciencefestival.co.uk/": 1, "http://feeds.wordpress.com/": 1, "http://telly.com/": 1, "http://www.standupmaths.com/": 1, "http://www.manchestersciencefestival.com/": 2, "http://mathlesstraveled.com/": 1}, "blogtitle": "The Math Less Traveled"}, {"content": ["In an idle moment a while ago I wrote a program to generate \"factorization diagrams\". Here\u2019s 700: \n \n \n \n \n \n \n It\u2019s easy to see (I hope), just by looking at the arrangement of dots, that there are in total. \n Here\u2019s how I did it. First, a few imports: a function to do factorization of integers, and a library to draw pictures (yes, this is the library I wrote myself; I promise to write more about it soon!). \n > module Factorization where \n > \n > import Math . NumberTheory . Primes . Factorisation ( factorise ) \n > \n > import Diagrams . Prelude \n > import Diagrams . Backend . Cairo . CmdLine \n > \n > type Picture = Diagram Cairo R2 \n \n The primeLayout function takes an integer n (assumed to be a prime number) and some sort of picture, and symmetrically arranges n copies of the picture. \n > primeLayout :: Integer -> Picture -> Picture \n \n There is a special case for 2: if the picture is wider than tall, then we put the two copies one above the other; otherwise, we put them next to each other. In both cases we also add some space in between the copies (equal to half the height or width, respectively). \n > primeLayout 2 d \n >  | width d > height d = d === strutY ( height d / 2 ) === d \n >  | otherwise   = d ||| strutX ( width d / 2 ) ||| d \n \n This means when there are multiple factors of two and we call primeLayout repeatedly, we end up with things like \n \n \n \n \n \n \n If we always put the two copies (say) next to each other, we would get \n \n \n \n \n \n \n which is much clunkier and harder to understand at a glance. \n For other primes, we create a regular polygon of the appropriate size (using some trig I worked out on a napkin, don\u2019t ask me to explain it) and position copies of the picture at the polygon\u2019s vertices. \n > primeLayout p d = decoratePath pts ( repeat d ) \n >  where pts = polygon with { polyType  = PolyRegular ( fromIntegral p ) r \n >        , polyOrient = OrientH \n >        } \n >   w = max ( width d ) ( height d ) \n >   r = w * c / sin ( tau / ( 2 * fromIntegral p ) ) \n >   c = 0.75 \n \n For example, here\u2019s primeLayout 5 applied to a green square: \n \n \n \n \n \n \n Now, given a list of prime factors, we recursively generate an entire picture as follows. First, if the list of prime factors is empty, that represents the number 1, so we just draw a black dot. \n > factorDiagram' :: [ Integer ] -> Diagram Cairo R2 \n > factorDiagram' []  = circle 1 # fc black \n \n \n \n \n \n \n \n Otherwise, if the first prime is called p and the rest are ps , we recursively generate a picture from the rest of the primes ps , and then lay out p copies of that picture using the primeLayout function. \n > factorDiagram' ( p : ps ) = primeLayout p ( factorDiagram' ps ) # centerXY \n \n Finally, to turn a number into its factorization diagram, we factorize it, normalize the returned factorization into a list of primes, reverse it so the bigger primes come first, and call factorDiagram' . \n > factorDiagram :: Integer -> Diagram Cairo R2 \n > factorDiagram = factorDiagram' \n >     . reverse \n >     . concatMap ( uncurry $ flip replicate ) \n >     . factorise \n \n And voila! Of course, this really only works well for numbers with prime factors drawn from the set (and perhaps ). For example, here\u2019s 121: \n \n \n \n \n \n \n Are there 11 dots in those circles? 13? I can\u2019t really tell at a glance. And here\u2019s 611: \n \n \n \n \n \n \n Uhh\u2026 well, at least it\u2019s pretty! \n Here are the factorization diagrams for all the integers from 1 to 36: \n \n \n \n \n \n \n Powers of three are especially fun, since their factorization diagrams are Sierpinski triangles ! For example, here\u2019s : \n \n \n \n \n \n \n Powers of two are also fun. Here\u2019s : \n \n \n \n \n \n \n [ ETA : as anon points out , this fractal has a name too: Cantor dust !] \n One last one: 104. \n \n \n \n \n \n \n I wish I knew how to make a website where you could enter a number and have it show you the factorization diagram\u2026 maybe eventually. \n (In case you were wondering, .)"], "link": "http://mathlesstraveled.com/2012/10/05/factorization-diagrams/", "bloglinks": {}, "links": {"http://feeds.wordpress.com/": 1, "http://en.wikipedia.org/": 2, "http://mathlesstraveled.com/": 1, "http://projects.haskell.org/": 1}, "blogtitle": "The Math Less Traveled"}, {"content": ["This is the first in a planned series of posts explaining what I do in my \"day job\" as a computer science PhD student. The idea is to write a series of posts of increasing specificity, but all aimed at a general audience. \n Have you ever wondered what I actually do all day, other than write this blog? (Well, probably the answer is \"no\" since, as we all know, people on the Internet don\u2019t actually have real lives, in the same way that kindergarten teachers live in the closet in their classroom.) But what I do will actually be quite interesting to readers of this blog, I think. \n So, to start off: I am a computer scientist . What does that mean? \n What I don\u2019t do \n Let me begin by saying that \"computer science\" is actually a terrible name for what I do. It\u2019s akin to an astronomer saying they study telescope science , or a microbiologist saying they study microscope science . Of course, astronomers don\u2019t study telescopes, they use telescopes to study stars and supernovas. Microbiologists don\u2019t study microscopes, they use microscopes to study cells and DNA. And I don\u2019t study computers, I use computers to study\u2026 well, what? \n Computation \n In a broad sense, what computer scientists study is computation , by which we mean processes of some sort that take some information and turn it into other information. Questions that can be asked about computation include: \n \n What are different ways of describing a computational process? \n How can information be structured to make computational processes easier to write, more efficient, or more beautiful? \n How can two different computational processes be compared? When is one process \"better\" than another? \n How can different processes be combined into a larger process? \n How can we be sure that some process really does what we want it to? \n What sorts of \"machines\" can be used to automate computational processes? \n What (if any) are the limitations of computational processes? \n \n I\u2019m sure other questions could be added to this list, but these are some of the most fundamental ones. \n Notice that none of these questions inherently have anything to do with computers. A \"computational process\" could be carried out with piles of rocks, an abacus, paper and pencil (did you know that the word \"computer\" used to refer to a person whose job it was to do carry out computational processes?), a carefully set up room full of dominoes , or a carefully set up test tube full of DNA . It\u2019s just that modern computers can carry out (most) computational processes many orders of magnitude faster than any other method we know of, so they make exploring the above questions possible in much deeper ways than they would otherwise be. And indeed, the mathematical roots of computer science go back many hundreds, even thousands of years before the advent of digital computers. \n So, I study computation. But as you can see from the list of questions above, that\u2019s still incredibly broad. In fact, my research focuses on the first two questions in the list above. In Part 1 I\u2019ll describe those questions in a bit more detail. Also, I\u2019m happy to try to answer any questions left in the comments!"], "link": "http://mathlesstraveled.com/2012/10/04/what-i-do-part-0-2/", "bloglinks": {}, "links": {"http://feeds.wordpress.com/": 1, "http://www.economist.com/": 1, "http://en.wikipedia.org/": 1}, "blogtitle": "The Math Less Traveled"}, {"content": ["A couple things to draw your attention to: \n \n The 90th Carnival of Mathematics is up over at Walking Randomly . There\u2019s quite a lot of cool stuff in this edition, go check it out! \n The first episode of Relatively Prime is up! This is \u201ca series of eight shows all about the stories behind mathematics\u201d produced by Samuel Hansen. I haven\u2019t actually had a chance to listen to the first episode yet, but I know he flew all over the world interviewing mathematicians for this\u2014so it ought to be interesting! I also helped fund it on Kickstarter so I\u2019m quite excited to see the fruits."], "link": "http://mathlesstraveled.com/2012/09/17/com-and-relatively-prime/", "bloglinks": {}, "links": {"http://feeds.wordpress.com/": 1, "http://www.walkingrandomly.com/": 2, "http://relprime.com/": 1}, "blogtitle": "The Math Less Traveled"}, {"content": ["A three-for-one today! Here are three books I wanted to mention to you, dear reader, for one reason or another. \n \n  \n \n A Wealth of Numbers Benjamin Wardhaugh \n Princeton Press kindly sent me a review copy of this book. As an anthology of popular mathematics writing from the 1500\u2032s to the present, it\u2019s not the sort of book I usually review here\u2014but it\u2019s nonetheless fascinating. The featured excerpts are, by turns gripping, dull, lucid, incomprehensible, hilarious, irrelevant, and fun. I didn\u2019t learn a whole lot of new mathematics by reading this anthology, but it gave me some eye-opening perspective on how people have thought and written about mathematics over the last 500 years. \n \n  \n \n Dead Reckoning: Calculating Without Instruments Ronald W. Doerfler \n There\u2019s a lot of controversy over the use of calculators and computers in math classrooms. Should they be welcomed as labor-saving devices that allow students to explore mathematics in new ways, or eschewed as crutches that turn students into button-pushing automata with no real understanding? It\u2019s an important debate, but it seems to me that those who argue against calculators sometimes have a nonetheless impoverished view of the alternative: just the ability to do the standard Western algorithms for the four basic arithmetic operations, and understand why the algorithms work. \n This book (which I received as a gift about six months ago) isn\u2019t intended to enter that debate directly\u2014but it is a far-ranging survey of methods for pencil-and-paper (or mental) calculation. There are general algorithms, of course, (and not just for arithmetic, but for square roots, logarithms, trig functions\u2026) but there are also all sorts of tricks and special cases which arise from, and engender, intimate familiarity with numbers. Is it \"practical\"? Well, not really. But that\u2019s certainly not the point. I had so much fun reading through this book and trying out all the different algorithms: multiplying in my head, computing square roots to many decimal places using just a single sheet of paper\u2026 Honestly I don\u2019t remember any of the actual algorithms anymore, but I came away with better number sense\u2014and I may just pull it out and try some of the algorithms again. Eventually some of them are bound to stick! \n \n  \n \n Mathematical Literacy in the Middle and High School Grades Faith Wallace and Mary Anna Evans \n I mention this book particularly because it contains (in a box on page 67) an essay by yours truly! I wrote something about the experience of writing this blog and inspiring readers with mathematical beauty. \n I no longer teach middle or high-school students, but the idea of using literacy to inspire interest in math makes a lot of sense to me (and of course, it\u2019s perfectly applicable at the college level as well). There are all sorts of interesting ideas in here\u2014some of which I will never use (discussing statistics and voting via American Idol ) but others of which I\u2019d love to try someday (using biography or fiction to inspire mathematical interest)."], "link": "http://mathlesstraveled.com/2012/08/23/three-new-books/", "bloglinks": {}, "links": {"http://www.pearsonhighered.com/": 2, "http://press.princeton.edu/": 2, "http://www.myreckonings.com/": 2, "http://feeds.wordpress.com/": 1}, "blogtitle": "The Math Less Traveled"}, {"content": ["I just learned from Denise at Let\u2019s Play Math! that Keith Devlin is going to be teaching a course on Coursera called Introduction to Mathematical Thinking . It\u2019s free and open to anyone with only a background in high school math. Looks like it should be quite interesting and perhaps of interest to some of my readers!"], "link": "http://mathlesstraveled.com/2012/08/22/introduction-to-mathematical-thinking-with-keith-devlin/", "bloglinks": {}, "links": {"http://devlinsangle.blogspot.com/": 1, "https://www.coursera.org/": 2, "http://feeds.wordpress.com/": 1, "http://letsplaymath.net/": 2}, "blogtitle": "The Math Less Traveled"}, {"content": ["Inspired by the comments on this post , I\u2019ve had some ideas brewing for a while\u2014I\u2019m just only now getting around to writing them up. \n The topic is visualizing winning strategies for \"nim-like\" games . What do I mean by that? By a nim-like game I mean a game in which two players take turns removing objects from some piles (subject to some rules), and the last player to play is the winner (or, sometimes, the loser). \n A cute variant, due to Paul Zeitz (and introduced to me by Sue VanHattum ), is to think of a pet shop with different types of pets; players take turns visiting the pet shop and buying some pets, until the store is all out of pets. \n \n  \n \n For games with only two piles, or a pet store with only two types of pets, playing the game can also be thought of as making moves on a square grid. The -coordinate represents, say, the number of Xoloitzcuintli , and the y-coordinate the number of Yaks; the square with coordinates means that the pet store has xolos and yaks left. Buying some xolos corresponds to moving left; buying yaks means moving down; buying an equal number of each means moving diagonally down and left; and so on. \n \n \n \n \n \n Here are a few examples of nim-like games: \n \n \n In the game of nim , you may only buy one type of animal on each turn (but you can buy as many as you want). On a grid, you are allowed to move any distance left or down (but not both). \n The interesting thing is that we can visualize the winning strategy for this game in the following way. (Zachary Abel has a much more detailed explanation of this idea .) A winning position is a square that guarantees a win\u2014that is, if it is your turn and you are on a winning square, then (assuming you make the right move and continue to play perfectly) you will win the game. I\u2019ll indicate winning positions by light green squares, like this: . A losing position is a position such that you can\u2019t win no matter what move you make (assuming your opponent plays perfectly). I\u2019ll indicate losing positions by dark blue squares, like this: . In fact, the winning positions are exactly those from which there exists at least one legal move to a losing position; and the losing positions are those from which every legal move is to a winning position. \n Here\u2019s what it looks like for nim: \n \n \n \n \n \n Not too exciting, but it makes sense. If the pet store has an equal number of each type of pet remaining, the first person to move is going to lose: their move will result in an unequal number of pets ( i.e. a square off the main blue diagonal), and all their opponent has to do is buy an equal number of the other type of pet to restore balance. Ultimately the losing player will be forced to clean the store out of one type of pet, and the other player then wins by cleaning the store out of the other type. \n \n \n In Wythoff\u2019s game , you may buy any number of a single type of animal, or an equal number of both. On a grid, you are allowed to move any distance left, down, or at a 45 degree angle left and down. \n The visualization for this game, of course, is much more interesting: \n \n \n \n \n \n You can read all about the fascinating analysis of this game (and its visualization) on Zachary Abel\u2019s blog . \n \n \n In a comment , Max described a game from the International Olympiad in Informatics: \n \nYou start with a rectangle, and you can cut it either vertically or horizontally at integer sizes, each time keeping the larger piece; the goal is to obtain a unit square (so that your opponent can\u2019t move).\n \n It\u2019s not as obvious, but this is also a nim-like game. The two dimensions of the rectangle correspond to the number of pets of two different types. For example, a rectangle corresponds to 10 xolos and 7 yaks. The rectangle must be cut either vertically or horizontally, meaning that you can only buy one type of pet on a given turn. The interesting twist is that you must keep the larger piece resulting from a cut, which is equivalent to saying that you may buy any number of pets but only up to half the number of pets the store currently has. For example, if the store has xolos and yaks, you may buy up to xolos, or up to yaks. Buying any more than that would correspond to cutting the rectangle and keeping the smaller piece, which is not allowed. \n Naturally, I wondered what the visualization of this game looks like. I figured it had to be something interesting, and I wasn\u2019t disappointed! Here it is (note that the bottom-left square represents here, whereas in the visualizations for nim and Wythoff\u2019s game it represented ): \n \n \n \n \n \n Woah, neat! It looks as if the losing squares fall along diagonal lines of slope for all integer n (that is, , , , , , and so on)\u2014though the lines don\u2019t all pass through the origin. It\u2019s not surprising that the main diagonal consists of all losing positions\u2014the strategy is the same as for nim; the fact that one can only buy up to half of a certain type of animal doesn\u2019t make any difference. If it is your opponent\u2019s turn to move and the store has an equal number of xolos and yaks, if they buy a certain number of yaks you can buy the same number of xolos, and vice versa. Eventually the store will have one of each, at which point your opponent loses since they can\u2019t buy any more animals (they would only be allowed to buy, say, half a yak, but the pet store has the sensible policy of not chopping pets in half\u2014too messy). \n However, apparently there are additional losing positions other than the main diagonal. For example, according to the graph, if the store has 4 xolos and 19 yaks, then the next player to move is going to lose! You can verify for yourself that from this point, the only legal moves are to light green ( i.e. winning) positions, and that from any of these positions the other player can make a legal move to another dark blue ( i.e. losing) position, and so on. \n \n \n Some directions we could go from here: \n \n \n Can you think of any variant nim-like games to explore? I have a very general program for creating game visualizations like the above, so if you describe a variant game in the comments I will be happy to try to generate a visualization for it. \n \n \n What about nim-like games with three (or more) piles? To visualize the strategies for these, we have to use three (or more!) dimensions. I hope to eventually come up with a way to do this, at least for three dimensions. I happen to know that nim is much more interesting in three dimensions than in two! \n \n \n Can you prove that the visualization of the rectangle-cutting game really looks like the above? Can you come up with a nice way to characterize the winning strategy, or at least the losing positions?"], "link": "http://mathlesstraveled.com/2012/08/16/visualizing-nim-like-games/", "bloglinks": {}, "links": {"http://mathlesstraveled.wordpress.com/": 2, "http://feeds.wordpress.com/": 1, "http://blog.zacharyabel.com/": 3, "http://en.wikipedia.org/": 1, "http://www.amazon.com/": 1, "http://mathlesstraveled.com/": 3}, "blogtitle": "The Math Less Traveled"}, {"content": ["Just a link today\u2014check out this awesome tiling database ! It\u2019s got tons of beautiful plane tilings (with information and further reading about each one) and many ways to search through the database. It\u2019s a great way to find examples of particular symmetries or types of tilings\u2026 but it\u2019s also fun to just ooh and ahh over random entries from the database. \n \n  \n \n I wish I could remember where I first came across this."], "link": "http://mathlesstraveled.com/2012/08/02/searchable-tiling-database/", "bloglinks": {}, "links": {"http://feeds.wordpress.com/": 1, "http://www.tilingsearch.org/": 1}, "blogtitle": "The Math Less Traveled"}]