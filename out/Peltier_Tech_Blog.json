[{"blogurl": "http://peltiertech.com/WordPress\n", "blogroll": [], "title": "Peltier Tech Blog"}, {"content": ["You may have sets of data for several categories, and you want to show the values for each category, and highlight some kind of range for each category (a permissible range, a target range, or some statistically computed range). \n The following chart shows three categories (A, B, and C) with highlighted ranges and several data points for each. \n \n This combination chart is simple to make. \n The Individual Values \n We can plot the points as an XY Scatter chart series. This chart uses 1, 2, and 3 for categories A, B, and C. \n \n There is substantial overlap between points, so it would be helpful to jitter the points, that is, spread them out laterally so they no longer overlap. \n \n And of course, we want to show A, B, and C instead of 1, 2, and 3. Plus add the highlighted ranges for each category. \n \n The Data \n We\u2019ll use the following data. The floating columns are defined in B2:D5, and the actual points are described in F2:I17. Column F has the point identification, category and index, which will not be shown in the chart. Column G has X values 1, 2, and 3 corresponding to the categories A, B, and C. Column H has the jittered X values. Column I has the actual Y values. \n \n I\u2019ve never encountered a useful jittering algorithm, so I fudged my own, which works well enough. The formula in H3 is \n =G3+0.2*(RAND()-RAND()) \n This gives a random number within \u00b10.2 of G3, biased closer to the middle of the \u00b10.2 range. \n Building the Chart \n Make a stacked column chart with the data in B2:D5. \n \n Format the bottom series (\u201cMin\u201d) so its fill is No Color. The result is the floating column chart that serves as a backdrop for the actual points. \n \n When an XY series is plotted on the axes of a column chart, an X value of 1 corresponds to the first category, 2 corresponds to the second category, etc. A value between 1 and 2 will be plotted proportionally between the first and second categories: 1.5 is midway between the columns at A and B. The jittered X values between 0.8 and 1.2 will fit within the width of the column at A. \n Copy the range H2:I17, select the chart, and use Paste Special to add the data as a new series, with series in columns, series name in first row, category labels in first column. \n \n The new series was added as a new set of columns stacked on the floating columns and on extra categories further to the right. \n Right click one of the added points, choose Change Chart Type, and select the XY variant with markers and no lines. \n \n The XY points were initially plotted onto secondary axes, which are misaligned from the primary axes of the floating columns. Format the XY series so it is plotted on the primary axis to finish the chart. \n \n Peltier Technical Services, Inc., Copyright \u00a9 2011. \u00a0 Licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License ."], "link": "http://peltiertech.com/WordPress/categorical-xy-chart-with-highlighted-categorical-ranges/", "bloglinks": {}, "links": {"http://peltiertech.com/": 1, "http://creativecommons.org/": 1}, "blogtitle": "Peltier Tech Blog"}, {"content": ["Conditional Formatting of Excel Line and XY Chart Lines \n \n I\u2019ve written a lot about conditional formatting of charts. One topic I have not covered is formatting of lines in line charts and XY charts, because this isn\u2019t as easy to do. \n Formula-Based Conditional Formatting \n In\u00a0 Conditional Formatting of Excel Charts and\u00a0 Conditional XY Charts Without VBA , I showed examples of a formula-based technique to apply conditional formatting in Excel Charts. Essentially there are as many series in the chart as there are distinct formats you want to show. There is one point (i.e., one bar or marker) displayed where a point should be displayed, and the formulas control which series displays each point, with which format. Using formulas is more reliable than using VBA, because updating is dynamic without needing to run code whenever the data changes, and it\u2019s easier to maintain. This approach can be applied to bar or column charts\u2026 \n \n \u2026 to markers in line charts\u2026 \n \n \u2026 and to markers in XY charts\u2026 \n \n This conditional formatting is applied to each individual point, but unfortunately it cannot be applied in this way to the individual line segments connecting markers in a line chart. \n VBA-Controlled Conditional Formatting \n Sometimes you don\u2019t have the luxury of using formulas for your conditional formatting. Here are a few articles showing VBA techniques for applying conditional formats to a chart: \n \n VBA Conditional Formatting of Charts by Series Name \n VBA Conditional Formatting of Charts by Value \n VBA Conditional Formatting of Charts by Category Label \n Pivot Table Conditional Formatting with VBA \n VBA Conditional Formatting of Charts by Value and Label \n \n VBA-Controlled Conditional Formatting of Line Chart Lines \n You might want to format lines differently if they represent rising or falling values. Green line segments for increasing trends or red for decreasing. Actually, a more color-vision-friendly combination is blue for increasing and orange for decreasing. The chart at the top of this article is a good example. \n Unfortunately, line segments in a line or XY chart cannot be turned on or off using formulas, the way markers or columns and bars can be. So we\u2019ll have to use VBA to format them. \n For this tutorial. let\u2019s dig out some web site statistics. This chart of weekly visits show some week-to-week fluctuations, with occasional flat segments which we will not want to color. \n \n I decided to record a macro so I can figure out the syntax. The help files are pretty sketchy about this. \n I started with a boring dummy chart with three series. \n \n I turned on the macro recorder while I applied the following formatting to the dummy chart. I changed line colors, and I didn\u2019t change the marker color but shrunk the marker size \n \n Here\u2019s the recorded macro. It\u2019s no uglier than any other recorded macro. \n Sub RecordedMacro1()\n'\n' RecordedMacro1 Macro\n'\n\n'\n ActiveChart.SeriesCollection(1).Select\n With Selection.Format.Line\n  .Visible = msoTrue\n  .ForeColor.ObjectThemeColor = msoThemeColorAccent5\n  .ForeColor.TintAndShade = 0\n  .ForeColor.Brightness = 0.400000006\n  .Transparency = 0\n End With\n With Selection.Format.Line\n  .Visible = msoTrue\n  .Weight = 2.25\n End With\n Selection.MarkerSize = 4\n ActiveChart.SeriesCollection(2).Select\n With Selection.Format.Line\n  .Visible = msoTrue\n  .ForeColor.ObjectThemeColor = msoThemeColorAccent6\n  .ForeColor.TintAndShade = 0\n  .ForeColor.Brightness = 0.400000006\n  .Transparency = 0\n End With\n With Selection.Format.Line\n  .Visible = msoTrue\n  .Weight = 2.25\n End With\n Selection.MarkerSize = 4\n ActiveChart.SeriesCollection(3).Select\n With Selection.Format.Line\n  .Visible = msoTrue\n  .ForeColor.ObjectThemeColor = msoThemeColorBackground1\n  .ForeColor.TintAndShade = 0\n  .ForeColor.Brightness = -0.349999994\n  .Transparency = 0\n End With\n With Selection.Format.Line\n  .Visible = msoTrue\n  .Weight = 2.25\n End With\n Selection.MarkerSize = 4\nEnd Sub \n Well, yeah, it is kind of ugly. It selects everything, then works on the selection object, and includes all that default stuff I never touched. \n Long story short (long code short), I used constants for the formatting settings, streamlined the code. I also did some magic to compare whether adjacent points showed increasing or decreasing values to decide what colors to use. \n Sub ColorLinesBasedOnSlope_ThemeColor()\n Dim srs As Series\n Dim iPoint As Long\n Dim vValues As Variant\n\n Const thmclrBlue As Long = msoThemeColorAccent5\n Const briteBlue As Double = 0.4\n Const thmclrOrange As Long = msoThemeColorAccent6\n Const briteOrange As Double = 0.4\n Const thmclrGray As Long = msoThemeColorBackground1\n Const briteGray As Double = -0.4\n Const dWeight As Double = 2.25\n Const lMarkerSize As Long = 4\n\n Set srs = ActiveChart.SeriesCollection(1)\n vValues = srs.Values\n For iPoint = 2 To UBound(vValues)\n With srs.Points(iPoint).Format.Line.ForeColor\n  Select Case vValues(iPoint) - vValues(iPoint - 1)\n  Case Is > 0\n   .ObjectThemeColor = thmclrBlue\n   .Brightness = briteBlue\n  Case Is < 0\n   .ObjectThemeColor = thmclrOrange\n   .Brightness = briteOrange\n  Case Else\n   .ObjectThemeColor = thmclrGray\n   .Brightness = briteGray\n  End Select\n End With\n srs.Points(iPoint).Format.Line.Weight = dWeight\n srs.Points(iPoint).MarkerSize = lMarkerSize\n Next\nEnd Sub \n I selected my chart (actually, I was smart and selected a duplicate chart) and ran this code. Here\u2019s what happened: \n \n Oof! Not only did the code format the line segments, it also formatted the marker lines. I never did that while recording the macro. \n Turns out, the object model for Excel 2007/2010 charts does not distinguish between the connecting lines and the lines that draw the markers. Well, that\u2019s no good. \n Fortunately I still can use the old tired and true Excel 2003 VBA syntax. Instead of .Format.Line.Whatever, I reverted to .Border.Whatever, and I took out that weird ThemeColor drivel, and replaced it with the familiar RGB color definitions. I present the updated code. \n Sub ColorLinesBasedOnSlope_RGBColor()\n Dim srs As Series\n Dim iPoint As Long\n Dim vValues As Variant\n\n Const rgbMyBlue As Long = 14536083\n Const rgbMyOrange As Long = 9486586\n Const rgbMyGray As Long = 10921638\n Const lWeight As Long = xlThick\n Const lMarkerSize As Long = 4\n\n Set srs = ActiveChart.SeriesCollection(1)\n vValues = srs.Values\n For iPoint = 2 To UBound(vValues)\n With srs.Points(iPoint).Border\n  Select Case vValues(iPoint) - vValues(iPoint - 1)\n  Case Is > 0\n   .Color = rgbMyBlue\n  Case Is < 0\n   .Color = rgbMyOrange\n  Case Else\n   .Color = rgbMyGray\n  End Select\n  .Weight = lWeight\n End With\n srs.Points(iPoint).MarkerSize = lMarkerSize\n Next\nEnd Sub \n I selected another copy of the chart, and ran this new procedure. \n \n Nice. It colored the lines orange and blue, except for a couple horizontal segments that were colored gray. It also kept the markers gray, but shrunk them so they don\u2019t overwhelm the lines. \n The markers aren\u2019t really necessary. I like them, so I know for sure where there is actual data, but you can judge where the lines change their angle or color to know this. I made yet another copy of my original chart, removed the markers, and ran the formatting procedures. \n \n Which procedure did I use? Doesn\u2019t matter. Both produced the same result, since there were no markers for the newfangled code to mess up. \n \n Peltier Technical Services, Inc., Copyright \u00a9 2011. \u00a0 Licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License ."], "link": "http://peltiertech.com/WordPress/conditional-formatting-of-lines-in-an-excel-line-chart-using-vba/", "bloglinks": {}, "links": {"http://www.exceluser.com/": 1, "http://peltiertech.com/": 7, "http://creativecommons.org/": 1}, "blogtitle": "Peltier Tech Blog"}, {"content": ["Peltier Tech Cluster Stack Chart Utility for the Macintosh \n Peltier Technical Services is happy to release our second Mac utility, with the Cluster Stack Chart Utility for Macintosh . This utility will work in Excel 2011 for Macintosh, but not in earlier versions. MacExcel 2008 didn\u2019t even support VBA, and the VBA used in earlier versions of Excel for Mac was older than dirt, and not even fully compatible with Excel 2000 for Windows. \n Functionality of the Mac utility is nearly identical to that of the Windows version, though differences between the Mac and Windows platforms require it to be released as a separate utility. \n \n This conversion took longer than the earlier Waterfall Chart Utility. The code that mashed up the data and spit out the chart didn\u2019t need much adjustment, but redesigning the dialogs took hours. So did making all the screen shots for the documentation web page. \n \n For more information see the Cluster Stack Chart Utility for Macintosh documentation page . \n \n The Cluster Stack Chart Utility can be licensed from the\u00a0 Peltier Tech Cluster Stack Chart Utility \u00a0web page. Make sure the Mac version is listed in the shopping cart before you checkout.\n Peltier Technical Services, Inc., Copyright \u00a9 2011. \u00a0 Licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License ."], "link": "http://peltiertech.com/WordPress/cluster-stack-chart-utility-for-macintosh/", "bloglinks": {}, "links": {"http://www.exceluser.com/": 1, "http://peltiertech.com/": 3, "http://creativecommons.org/": 1}, "blogtitle": "Peltier Tech Blog"}, {"content": ["Slope Graphs \n Edward Tufte introduced Slope Graphs in\u00a0 The Visual Display of Quantitative Information \u00a0(p. 158): \n \n Slopegraphs \u00a0compare changes over time for a list\u00a0of nouns located on an ordinal or interval scale.\u00a0 This table-graphic above organizes data for viewing in several directions. When read\u00a0vertically, the chart ranks 15 countries by government tax collections in 1970 and again\u00a0in 1979, with the names spaced in proportion to the percentages. Across the columns, the\u00a0paired comparisons show how the numbers changed over the years. The slopes are also\u00a0compared by reading down the collection of lines, and lines of unusual slope stand out\u00a0from the overall upward pattern. The information shown is both integrated and separated:\u00a0integrated through its connected content, separated in that the eye follows several different\u00a0and uncluttered paths in looking over the data. \n This tutorial will show how to make a slope graph in Excel. \n \n When to Use Slope Graphs \n The Economist used a pair of donut charts to show changing pre-tax profits among banks from 2007 to 2011 in Bank Profits Head East . This is not a very effective approach. \n \n In\u00a0 Arrow Charts and Other Alternatives to Multiple Pie Charts \u00a0on the Forbes magazine web site, Naomi Robbins\u00a0introduced Arrow Charts as a replacement for double pie charts (and double donuts are at least as bad). I wrote a tutorial on my blog that showed How to Make Arrow Charts in Excel . The technique results in a much more effective chart: \n \n Naomi showed a slope graph in her Forbes blog post.\u00a0You can read more about slope graphs in\u00a0 Slopegraphs for comparing gradients: Slopegraph theory and practice \u00a0on the bulletin board on Edward Tufte\u2019s web site, and in\u00a0 Edward Tufte\u2019s \u201cSlopegraphs\u201d \u00a0on Charlie Park\u2019s blog. \n Making a Slope Graph \n Here is the data for our slope graph. Unlike the arrow chart, we do not need to make any adjustments to the data prior to building the chart. \n \n Select the data range (A4:C10) and insert a line chart without markers. \n \n Excel assumes the series are in columns because there are many more rows of data. On the Chart Tools > Design tab, click on Switch Row/Column. \n \n Hide the vertical axis by setting Major and Minor Tick Marks and Tick Labels to None, and select No Line for line color. \n \n Format the horizontal axis, and change the Position Axis setting to On Tick marks. You might also want to use a lighter gray than the default for the axis line. \n \n Delete the legend, make the chart taller, and format the series lines so they are thinner (1.5 pt wide rather than the default 2.25 pt). There is still plenty of white space to the left of the chart where the legend had been. \n \n Select a series, and add data labels. here I used the default label (which is the value) in the Right position. \n \n Select the first label (single click to select all the labels, then single click again to select the one label), and format it so it is in the Left position. Also color the label font to match the line color. For text I like to use one tile darker in the Excel color palette. \n \n Add and format labels as above for the rest of the series. \n \n Reposition any overlapping labels. Single click twice on a label, then you can drag it into position. The chart is wider because I stretched it to the left to fill the too-wide margin I began with. \n \n Insert text boxes from the Chart Tools > Layout tab. Type the names of the regions, color the text to match the data labels, and position the text boxes next to the labels. \n \n Finally, add a chart title, and the slope graph is finished. \n \n I generally prefer my labels to the right of the chart, but a lot of these labels are clustered at the bottom of the 2011 data. It might be better to position the region labels to the left of the chart. \n \n The slope graph shows that while most regions saw little change, Asia Pacific had a large increase and Western Europe had a similarly large decrease. The arrow chart also showed this, but it was not easy to see in the original double donut.\n Peltier Technical Services, Inc., Copyright \u00a9 2011. \u00a0 Licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License ."], "link": "http://peltiertech.com/WordPress/slope-graphs-in-excel/", "bloglinks": {}, "links": {"http://charliepark.org/": 1, "http://www.edwardtufte.com/": 2, "http://www.forbes.com/": 1, "http://creativecommons.org/": 1, "http://www.amazon.com/": 1, "http://peltiertech.com/": 2, "http://www.economist.com/blog": 1}, "blogtitle": "Peltier Tech Blog"}, {"content": ["The Economist showed changing pre-tax profits among banks from 2007 to 2011 in Bank Profits Head East . They chose to use a pair of donut charts for this. Weaknesses of this approach are the separation of the pairs of values into distinct donuts. This forces the reader to jump from side to side, and ultimately skip the charts and read the values in the labels. The combined chart has leader lines to help steer the reader\u2019s eyes from side to side, but this adds clutter, and the labels push the donuts further apart, making visual comparisons more difficult. \n \n Who you gonna call? Chart Busters! \n In\u00a0 Arrow Charts and Other Alternatives to Multiple Pie Charts \u00a0on the Forbes magazine web site, Naomi Robbins\u00a0introduced Arrow Charts as a replacement for double pie charts (and double donuts are at least as bad). I wrote a tutorial on my blog that showed How to Make Arrow Charts in Excel . The technique takes a bit of work, but once you\u2019ve made one arrow chart, you can use it as a template for new values. \n I took the example from my arrow chart\u00a0tutorial and swapped in the Economist\u2019s values: \n \n The first thing I learned from this arrow chart, which I missed in the double donut, is that most regions showed little change, but two regions showed major changes: Asia Pacific gained a huge percentage while Western Europe lost a similar amount. This is a great example of the effectiveness of arrow charts.\n Peltier Technical Services, Inc., Copyright \u00a9 2011. \u00a0 Licensed under a Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported License ."], "link": "http://peltiertech.com/WordPress/chart-busters-the-economist-doesnt-read-forbes/", "bloglinks": {}, "links": {"http://www.exceluser.com/": 1, "http://creativecommons.org/": 1, "http://www.forbes.com/": 1, "http://peltiertech.com/": 1, "http://www.economist.com/blog": 1}, "blogtitle": "Peltier Tech Blog"}]